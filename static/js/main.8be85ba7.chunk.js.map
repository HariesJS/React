{"version":3,"sources":["components/users/usersSelectors.js","api/ajax.js","redux/reducers/authReducer/authReducer.js","components/auth/authSelectors.js","redux/reducers/themeReducer/themeReducer.js","components/auth/Auth.jsx","components/theme/Theme.jsx","components/header/Header.jsx","redux/reducers/profileReducer/profileReducer.js","redux/reduxForm/validators.js","redux/store/store.js","redux/reduxForm/formsControl.js","components/profile/ProfileDataForm.jsx","components/profile/ProfileStatus.jsx","components/hoc/Wrapper.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/login/Login.jsx","components/updates/Updates.jsx","components/hoc/AuthMsg.jsx","App.js","components/hoc/withSuspense.jsx","serviceWorker.js","index.js","redux/reducers/appReducer/appReducer.js","components/theme/themeSelectors.js","objects-helper/patterns.js","redux/reducers/usersReducer/usersReducer.js","components/profile/profileSelectors.js"],"names":["getUsersData","createSelector","state","usersPage","users","filter","getUsersIsDisabled","isDisabled","getUsersIsLoad","isLoad","getUsersTotalCount","totalCount","getUsersCurrentPage","currentPage","instance","axios","withCredentials","baseURL","headers","adminURL","usersAPI","getUsers","page","count","get","followAPI","postFollow","id","post","deleteFollow","delete","profileAPI","getProfile","putImage","img","formData","FormData","append","put","putProfile","obj","getStatus","putStatus","status","authAPI","getAuth","postAuth","email","password","rememberMe","captcha","deleteAuth","captchaAPI","getCaptcha","adminAPI","getAdmin","addAdmin","removeAdmin","getTechAdmin","GET_AUTH","initialState","data","isAuth","isActualAuth","isActualDeauth","handlers","bol","getAuthCreator","login","type","getCaptchaCreator","setActualAuthCreator","setActualDeauthCreator","getAuthThunk","dispatch","a","response","resultCode","postAuthThunk","request","url","stopSubmit","_error","messages","logoutMeThunk","authReducer","action","handler","DEFAULT","getAuthData","auth","getAuthCaptcha","SET_COLOR","color","localStorage","getItem","setThemeColorCreator","themeReducer","Auth","useDispatch","useState","active","setActive","useSelector","getThemeColor","loadData","useCallback","useEffect","onMouseOver","onClick","className","to","onMouseOut","setItem","style","backgroundColor","activeClassName","Button","children","e","target","innerHTML","innerText","Theme","theme","Header","setNavBar","link","src","width","alt","GET_PROFILE","PUT_IMAGE","GET_STATUS","GET_ADMIN","GET_TECH_ADMIN","profile","isTechAdmin","isAdmin","getStatusCreator","putImageCreator","getAdminCreator","getTechAdminCreator","getProfileThunk","adminData","actionCreator","Object","keys","map","code","maxLength","getAdminThunk","profileReducer","photos","reducers","combineReducers","form","formReducer","usersReducer","profilePage","app","appReducer","store","createStore","applyMiddleware","thunk","FormsControl","meta","touched","error","hasError","toString","Input","props","input","Textarea","createFiled","component","name","validate","placeholder","Field","reduxForm","handleSubmit","contacts","onSubmit","key","ProfileStatus","isOwner","putStatusThunk","editMode","setEditMode","value","setValue","onChange","onBlur","autoFocus","Wrapper","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","removeAdminThunk","addAdminThunk","putImageThunk","putProfileThunk","loadUsers","getUsersThunk","userImage","some","userId","fullName","large","files","length","then","initialValues","followed","ProfileContainer","this","match","params","history","push","getStatusThunk","prop","componentDidMount","React","Component","compose","withRouter","connect","getProfileData","getProfileStatus","getProfileIsAdmin","getProfileIsTechAdmin","getState","Promise","reject","requireField","maxSymbols","title","bclass","content","LoginReduxForm","cn","href","Login","checkbox","Updates","upd","AuthMsg","Users","lazy","Project","initializing","globalError","setInitializingThunk","setTimeout","exact","from","path","render","Suspense","fallback","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_INITIALIZING","SET_GLOBAL_ERROR","SET_COUNT","setGlobalErorr","err","setCount","setGlobalErrorThunk","int","setInterval","clearInterval","followLogic","bolean","user","followThunk","setDisabled","GET_USERS","pageCount","getUsersCreator","followCreator","unfollowCreator","setLoader","getTotalCount","setCurrentPage","items","follow","unfollow"],"mappings":"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","file":"static/js/main.8be85ba7.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst getUsersSelector = state => {\n    return state.usersPage.users;\n}\n\nexport const getUsersData = createSelector(getUsersSelector, users => {\n    return users.filter(() => true);\n});\n\nexport const getUsersIsDisabled = state => {\n    return state.usersPage.isDisabled;\n}\n\nexport const getUsersIsLoad = state => {\n    return state.usersPage.isLoad;\n}\n\nexport const getUsersTotalCount = state => {\n    return state.usersPage.totalCount;\n}\n\nexport const getUsersCurrentPage = state => {\n    return state.usersPage.currentPage;\n}","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '11452ed1-3660-45e9-b8d1-a254f78a41b8'\n    }\n})\n\nconst adminURL = 'https://haries-network.firebaseio.com';\n\nexport const usersAPI = {\n    getUsers(page, count) {\n        return instance.get(`users?page=${page}&count=${count}`);\n    }\n}\n\nexport const followAPI = {\n    postFollow(id) {\n        return instance.post(`follow/${id}`);\n    },\n    deleteFollow(id) {\n        return instance.delete(`follow/${id}`);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`profile/${id}`);\n    },\n    putImage(img) {\n        const formData = new FormData();\n        formData.append('image', img);\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    putProfile(obj) {\n        return instance.put('profile', obj);\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`);\n    },\n    putStatus(status) {\n        return instance.put('profile/status', { status });\n    }\n}\n\nexport const authAPI = {\n    getAuth() {\n        return instance.get('auth/me');\n    },\n    postAuth(email, password, rememberMe, captcha) {\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\n    },\n    deleteAuth() {\n        return instance.delete('auth/login');\n    }\n}\n\nexport const captchaAPI = {\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    }\n}\n\nexport const adminAPI = {\n    getAdmin() {\n        return axios.get(`${adminURL}/isadmin.json`);\n    },\n    addAdmin(id) {\n        return axios.post(`${adminURL}/isadmin.json`, id);\n    },\n    removeAdmin(id) {\n        return axios.delete(`${adminURL}/isadmin/${id}.json`);\n    },\n    getTechAdmin() {\n        return axios.get(`${adminURL}/istechadmin.json`);\n    }\n}","import { authAPI, captchaAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_AUTH = 'my-app/authReducer/GET-AUTH';\nconst GET_CAPTCHA ='my-app/authReducer/GET-CAPTCHA';\nconst SET_ACTUAL_AUTH = 'my-app/authReducer/SET-ACTUAL-AUTH';\nconst SET_ACTUAL_DEAUTH = 'my-app/authReducer/SET-ACTUAL-DEAUTH';\n\nconst initialState = {\n    data: {\n        isAuth: false\n    },\n    captcha: null,\n    isActualAuth: false,\n    isActualDeauth: false\n}\n\nconst handlers = {\n    [GET_AUTH]: (state, { data, isAuth }) => ({\n        ...state, data: { ...data, isAuth }\n    }),\n    [GET_CAPTCHA]: (state, { captcha }) => ({\n        ...state, captcha\n    }),\n    [SET_ACTUAL_AUTH]: (state, { bol }) => ({\n        ...state, isActualAuth: bol\n    }),\n    [SET_ACTUAL_DEAUTH]: (state, { bol }) => ({\n        ...state, isActualDeauth: bol\n    }),\n    DEFAULT: state => state\n}\n\nconst authReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getAuthCreator = (id, login, email, isAuth) => ({ type: GET_AUTH, data: { id, login, email }, isAuth });\nconst getCaptchaCreator = captcha => ({ type: GET_CAPTCHA, captcha });\nexport const setActualAuthCreator = bol => ({ type: SET_ACTUAL_AUTH, bol });\nexport const setActualDeauthCreator = bol => ({ type: SET_ACTUAL_DEAUTH, bol });\n\nexport const getAuthThunk = () => async dispatch => {\n    const response = await authAPI.getAuth();\n    if (response.data.resultCode === 0) {\n        const { id, login, email } = response.data.data;\n        dispatch(getAuthCreator(id, login, email, true));\n    }\n}\n\nexport const postAuthThunk = (email, password, rememberMe, captcha) => async dispatch => {\n    const response = await authAPI.postAuth(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthThunk());\n        dispatch(getCaptchaCreator(null));\n        dispatch(setActualAuthCreator(true));\n    } else {\n        if (response.data.resultCode === 10) {\n            const request = await captchaAPI.getCaptcha();\n            dispatch(getCaptchaCreator(request.data.url));\n        }\n        dispatch(stopSubmit('authpage', { _error: response.data.messages[0] }));\n    }\n}\n\nexport const logoutMeThunk = () => async dispatch => {\n    const response = await authAPI.deleteAuth();\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthCreator(null, null, null, false));\n    }\n}\n\nexport default authReducer;","export const getAuthData = state => {\n    return state.auth.data;\n}\n\nexport const getAuthCaptcha = state => {\n    return state.auth.captcha;\n}","const SET_COLOR = 'my-app/themeReducer/SET-COLOR';\n\nconst initialState = {\n    color: localStorage.getItem('theme') ? localStorage.getItem('theme') : '#3959ab'\n}\n\nconst themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_COLOR: return { ...state, color: action.color };\n        default: return state;\n    }\n}\n\nexport const setThemeColorCreator = color => ({ type: SET_COLOR, color });\n\nexport default themeReducer;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getAuthThunk, logoutMeThunk, setActualDeauthCreator } from '../../redux/reducers/authReducer/authReducer';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\nimport { getAuthData } from './authSelectors';\nimport { getThemeColor } from '../theme/themeSelectors';\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const [active, setActive] = useState(false);\n    const data = useSelector(state => getAuthData(state));\n    const color = useSelector(state => getThemeColor(state));\n\n    const loadData = useCallback(() => dispatch(getAuthThunk()), [getAuthThunk]);\n    \n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    const closeForm = () => {\n        if (active) {\n            setActive(false);\n        }\n    }\n\n    const logoutForm = () => {\n        setActive(false);\n        dispatch(logoutMeThunk());\n        localStorage.setItem('theme', '#3959ab');\n        dispatch(setThemeColorCreator('#3959ab'));\n        dispatch(setActualDeauthCreator(true));\n    }\n    return (\n        <Fragment>{\n            data.isAuth\n            ? <div>\n                <Link\n                    onMouseOver={() => setActive(true)}\n                    onClick={closeForm}\n                    className='auth-user' to='/profile'>\n                        {data.login}\n                    </Link>\n                {active && (\n                    <span\n                        onMouseOut={() => setActive(false)}\n                        className='logout'\n                        onClick={logoutForm}\n                        style={{ backgroundColor: color }}>\n                        Log Out\n                    </span>\n                )}\n            </div>\n            : <NavLink className='auth-login' activeClassName='auth-login-active' to='/login'>LOGIN</NavLink>\n        }</Fragment>\n    )\n}\n\nexport default Auth;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\n\nconst Button = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const changeTheme = e => {\n        localStorage.setItem('theme', '#3959ab');\n\n        if (e.target.innerHTML === 'Blue') {\n            return dispatch(setThemeColorCreator(localStorage.getItem('theme')));\n        } else {\n            localStorage.setItem('theme', e.target.innerText);\n            return dispatch(setThemeColorCreator(e.target.innerText));\n        }\n    }\n    return <div onClick={changeTheme} className='theme-button'>{children}</div>\n}\n\nconst Theme = () => {\n    const color = useSelector(state => state.theme.color);\n\n    return (\n        <div style={{ backgroundColor: color }} className='theme-colors'>\n            <Button>Blue</Button>\n            <Button>Green</Button>\n            <Button>Orange</Button>\n            <Button>Red</Button>\n        </div>\n    )\n}\n\nexport default Theme;","import React, { useState, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport '../../App';\nimport Auth from '../auth/Auth';\nimport Theme from '../theme/Theme';\nimport { getThemeColor } from '../theme/themeSelectors';\nimport { getAuthData } from '../auth/authSelectors';\n\nconst Header = () => {\n    const color = useSelector(state => getThemeColor(state));\n    const data = useSelector(state => getAuthData(state));\n    const [active, setActive] = useState(false);\n\n    const setNavBar = (url, link) => {\n        return (\n            <div>\n                <NavLink className='route' to={url}>\n                    {link}\n                </NavLink>\n            </div>\n        )\n    }\n\n    const selectActive = () => {\n        if (active) {\n            return setActive(false);\n        } else {\n            return setActive(true);\n        }\n    }\n\n    const url = 'https://s3.amazonaws.com/www-inside-design/uploads/2019/08/color_wheel-810x810.png';\n    return (\n        <Fragment>\n            <div className='header-wrapper'>\n                <div className='header' style={{ backgroundColor: color }}>\n                    <div className='title'>\n                        <span>Haries Network</span>\n                        <span className='beta-title'>beta</span>\n                    </div>\n                    <span className='border-title'>|</span>\n                    {data.isAuth && (\n                        <div>\n                            <img\n                                className='color-img'\n                                onClick={selectActive}\n                                src={url}\n                                width={30}\n                                alt=''\n                            />\n                            {active && <Theme />}\n                        </div>\n                    )}\n                    {setNavBar('/updates', 'UPDATES')}\n                    {setNavBar('/profile', 'PROFILE')}\n                    {setNavBar('/users', 'USERS')}\n                    <Auth />\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Header;","import { profileAPI, adminAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_PROFILE = 'my-app/profileReducer/GET-PROFILE';\nconst PUT_IMAGE = 'my-app/profileReducer/PUT-IMAGE';\nconst GET_STATUS = 'my-app/profileReducer/GET-STATUS';\nconst GET_ADMIN = 'my-app/profileReducer/GET_ADMIN';\nconst GET_TECH_ADMIN = 'my-app/profileReducer/GET-TECH-ADMIN';\n\nconst initialState = {\n    profile: null,\n    status: null,\n    isTechAdmin: [],\n    isAdmin: []\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROFILE:\n        case GET_STATUS: return { ...state, ...action.data };\n        case PUT_IMAGE: return { ...state, profile: { ...state.profile, photos: action.img } };\n        case GET_ADMIN: return { ...state, isAdmin: action.isAdmin };\n        case GET_TECH_ADMIN: return { ...state, isTechAdmin: action.isTechAdmin };\n        default: return state;\n    }\n}\n\nconst getProfileCreator = profile => ({ type: GET_PROFILE, data: { profile } });\nconst getStatusCreator = status => ({ type: GET_STATUS, data: { status } });\nconst putImageCreator = img => ({ type: PUT_IMAGE, img });\nconst getAdminCreator = isAdmin => ({ type: GET_ADMIN, isAdmin });\nconst getTechAdminCreator = isTechAdmin => ({ type: GET_TECH_ADMIN, isTechAdmin });\n\nexport const getProfileThunk = id => async dispatch => {\n    const response = await profileAPI.getProfile(id);\n    dispatch(getProfileCreator(response.data));\n}\n\nexport const putImageThunk = img => async dispatch => {\n    const response = await profileAPI.putImage(img);\n    if (response.data.resultCode === 0) {\n        dispatch(putImageCreator(response.data.data.photos));\n    }\n}\n\nexport const putProfileThunk = obj => async (dispatch, getState) => {\n    const id = getState().auth.data.id;\n    const response = await profileAPI.putProfile(obj);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfileThunk(id));\n    } else {\n        dispatch(stopSubmit('profilepage', { _error: response.data.messages[0] }));\n        return Promise.reject();\n    }\n}\n\nexport const getStatusThunk = id => async dispatch => {\n    const response = await profileAPI.getStatus(id);\n    dispatch(getStatusCreator(response.data));\n}\n\nexport const putStatusThunk = status => async dispatch => {\n    const response = await profileAPI.putStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(getStatusCreator(status));\n    }\n}\n\nasync function adminData(request, dispatch, actionCreator) {\n    const response = await request();\n    const data = Object.keys(response.data).map(e => ({ code: response.data[e], id: e }));\n    if (data) {\n        dispatch(actionCreator(data));\n    }\n}\n\nexport const getAdminThunk = () => dispatch => {\n    adminData(adminAPI.getAdmin, dispatch, getAdminCreator);\n}\n\nexport const getTechAdminThunk = () => dispatch => {\n    adminData(adminAPI.getTechAdmin, dispatch, getTechAdminCreator);\n}\n\nexport const addAdminThunk = id => async dispatch => {\n    await adminAPI.addAdmin(id);\n    dispatch(getAdminThunk());\n}\n\nexport const removeAdminThunk = id => async dispatch => {\n    await adminAPI.removeAdmin(id);\n    dispatch(getAdminThunk());\n}\n\nexport default profileReducer;","export const requireField = value => {\n    if (!value) return 'Field is require!';\n}\n\nexport const maxLength = maxLength => value => {\n    if (value.length > maxLength) return `Max legnth is ${maxLength} symbols!`;\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport usersReducer from '../reducers/usersReducer/usersReducer';\nimport profileReducer from '../reducers/profileReducer/profileReducer';\nimport authReducer from '../reducers/authReducer/authReducer';\nimport appReducer from '../reducers/appReducer/appReducer';\nimport themeReducer from '../reducers/themeReducer/themeReducer';\n\nconst reducers = combineReducers({\n    form: formReducer,\n    usersPage: usersReducer,\n    profilePage: profileReducer,\n    auth: authReducer,\n    app: appReducer,\n    theme: themeReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { Field } from 'redux-form';\nimport '../../App.css';\n\nconst FormsControl = ({ meta: { touched, error }, children }) => {\n    const hasError = touched && error;\n    return (\n        <>\n            {children}\n            {hasError && <div className='warning_field'>\n                <b>{error.toString()}</b>\n            </div>}\n        </>\n    )\n}\n\nexport const Input = props => (\n    <FormsControl { ...props }><input { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const Textarea = props => (\n    <FormsControl { ...props }><textarea { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const createFiled = (component, name, validate, type, className, placeholder) => (\n    <Field\n        className={className}\n        component={component}\n        name={name}\n        validate={validate}\n        type={type}\n        placeholder={placeholder}\n    />\n)","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createFiled, Input, Textarea } from '../../redux/reduxForm/formsControl';\nimport '../../App.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile: { contacts }, error }) => (\n    <form onSubmit={handleSubmit}>\n        {error && <h2>{error}</h2>}\n        <div className='profile-form'>\n            <div><b>ABOUT ME:</b> <div className='edit-button'>\n                <button className='button'>SAVE</button>\n            </div> <div>{createFiled(Textarea, 'aboutMe', [])}</div></div>\n            <div><b>SEARCH JOB:</b> {createFiled(Input, 'lookingForAJob', [], 'checkbox')}</div>\n            <div><b>MY SKILLS:</b> <div>{createFiled(Textarea, 'lookingForAJobDescription', [])}</div></div>\n        </div>\n        <div>\n            <hr color='white' />\n            <b>SOCIAL NETWORKS</b>\n            <hr color='white' />\n        </div>\n        <div>{\n            Object.keys(contacts).map(e => (\n                <div className='profile-field' key={e}>\n                    <b className='profile-networks'>{e}:</b> \n                    <span>\n                        {createFiled(Input, `contacts.${e}`, [])}\n                    </span>\n                </div>\n            ))\n        }</div>\n    </form>\n);\n\nexport default reduxForm({ form: 'profilepage' })(ProfileDataForm);","import React, { Fragment, useState, useEffect } from 'react';\n\nconst ProfileStatus = ({ status, isOwner, putStatusThunk }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(status);\n\n    useEffect(() => {\n        setValue(status);\n    }, [status]);\n\n    const activateEditMode = () => {\n        if (isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        putStatusThunk(value);\n    }\n\n    const changeStatus = e => {\n        setValue(e.target.value);\n    }\n    return (\n        <Fragment>{\n            editMode\n            ? <input onChange={changeStatus} onBlur={deactivateEditMode} value={value} maxLength={19} autoFocus={true} />\n            : <span onClick={activateEditMode}>{value || '----'}</span>\n        }</Fragment>\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { getThemeColor } from '../theme/themeSelectors';\n\nconst Wrapper = ({ children }) => {\n    const color = useSelector(state => getThemeColor(state));\n\n    return (\n        <div className='wrapper-profile'>\n            <div style={{ backgroundColor: color }} className='profile-page'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Wrapper;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileStatus from './ProfileStatus';\nimport Wrapper from '../hoc/Wrapper';\nimport { getUsersThunk } from '../../redux/reducers/usersReducer/usersReducer';\nimport { Link } from 'react-router-dom';\nimport { getUsersData } from '../users/usersSelectors';\n\nconst Profile = ({ data, removeAdminThunk, addAdminThunk, profile, isTechAdmin, isAdmin, isOwner, putImageThunk, putProfileThunk, status, ...props }) => {\n    const dispatch = useDispatch();\n    \n    const [editMode, setEditMode] = useState(false);\n    const users = useSelector(state => getUsersData(state));\n\n    const loadUsers = useCallback(() => dispatch(getUsersThunk()), [getUsersThunk]);\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    if (!profile) {\n        return <div className='users-loader'>Loading...</div>\n    }\n\n    const changeImage = e => {\n        if (e.target.files.length) {\n            putImageThunk(e.target.files[0]);\n        }\n    }\n\n    const saveProfile = e => {\n        putProfileThunk(e)\n        .then(() => setEditMode(false));\n    }\n\n    const addAdmin = () => {\n        addAdminThunk(profile.userId);\n    }\n\n    const removeAdmin = () => {\n        isAdmin.map(e => {\n            if (e.code === profile.userId) {\n                removeAdminThunk(e.id);\n            }\n        })\n    }\n    \n    const userImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/User_icon_2.svg/220px-User_icon_2.svg.png';\n    return (\n        <Fragment>\n            <Wrapper>\n                <div className='profile-flex'>\n                    <div className='profile-oneblock'>\n                        {!isTechAdmin.some(id => id.code === profile.userId)\n                        ? !isAdmin.some(id => id.code === profile.userId)\n                        ? <div className='profile-info'>{profile.fullName} | {profile.userId}</div>\n                        : <div className='profile-admin-info '>{profile.fullName} | {profile.userId} (admin)</div>\n                        : <div className='profile-techadmin-info'>{profile.fullName} | {profile.userId} (developer)</div>}\n                        <div><img className={profile.photos.large && 'profile-img'} src={profile.photos.large || userImage} alt='' /></div>\n                        {!isOwner && data.id && (\n                            <>{\n                                !isAdmin.some(id => id.code === profile.userId)\n                                ? <button onClick={addAdmin} className='button'>назначить админом</button>\n                                : <button onClick={removeAdmin} className='button'>снять админа</button>\n                            }</>\n                        )}\n                        {isOwner && <input type='file' onChange={changeImage} />}\n                        <div className='profile-status'>STATUS: <ProfileStatus status={status} isOwner={isOwner} { ...props } /></div>\n                    </div>\n                    <div className='profile-twoblock'>\n                        {!editMode\n                            ? <ProfileData onClick={() => setEditMode(true)} isOwner={isOwner} profile={profile} />\n                            : <ProfileDataForm onSubmit={saveProfile} initialValues={profile} profile={profile} />}\n                    </div>\n                    {isOwner && <div className='followers-wrapper'>\n                        <span className='follow-title'>друзья</span>\n                        <div className='followers-block'>\n                            {users.filter(e => e.followed === true).map(({ id, name, photos }) => (\n                                <div key={id}>\n                                    <Link className='image-wrapper' to={`/profile/${id}`}>\n                                        <img className='image-user' src={photos.large || userImage} alt='' />\n                                    </Link>\n                                    <div className='follower-name'>{name}</div>\n                                </div>\n                            ))}\n                            <div className='followers-info'>найти друзей можно во вкладке users</div>\n                        </div>\n                    </div>}\n                </div>\n            </Wrapper>\n        </Fragment>\n    )\n}\n\nconst ProfileData = ({ isOwner, onClick, profile: { contacts, aboutMe, lookingForAJob, lookingForAJobDescription } }) => {\n    return (\n        <Fragment>\n            {isOwner && <div className='edit-button'>\n                <button className='button' onClick={onClick}>EDIT</button>\n            </div>}\n            <div><b>ABOUT ME:</b> {aboutMe && aboutMe.toString()}</div>\n            <div><b>SEARCH JOB:</b> {lookingForAJob ? 'YES' : 'NO'}</div>\n            <div><b>MY SKILLS:</b> {lookingForAJobDescription && lookingForAJobDescription.toString()}</div>\n            <div>\n                <hr color='white' />\n                <b>SOCIAL NETWORKS</b>\n                <hr color='white' />\n            </div>\n            <div>{\n                Object.keys(contacts).map(e => (\n                    <div key={e}>{contacts[e] && <><b className='profile-networks'>{e}:</b> {contacts[e]}</>}</div>\n                ))\n            }</div>\n        </Fragment>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfileThunk, putImageThunk, putProfileThunk, getStatusThunk, putStatusThunk, addAdminThunk, removeAdminThunk } from '../../redux/reducers/profileReducer/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getProfileData, getProfileStatus, getProfileIsAdmin, getProfileIsTechAdmin } from './profileSelectors';\nimport { getAuthData } from '../auth/authSelectors';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let id = this.props.match.params.userId;\n        if (!id) {\n            id = this.props.data.id;\n            if (!id) {\n                this.props.history.push('/login');\n            }\n        }\n        if (this.props.data.isAuth || this.props.match.params.userId) {\n            this.props.getProfileThunk(id);\n            this.props.getStatusThunk(id);\n        }\n    }\n    \n    componentDidUpdate(prop) {\n        if (prop.match.params.userId !== this.props.match.params.userId ||\n            prop.data.isAuth !== this.props.data.isAuth) {\n            this.componentDidMount();\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId} { ...this.props } />\n    }\n}\n\nconst mapStateToProps = state => ({\n    profile: getProfileData(state),\n    status: getProfileStatus(state),\n    isAdmin: getProfileIsAdmin(state),\n    isTechAdmin: getProfileIsTechAdmin(state),\n    data: getAuthData(state)\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n    getProfileThunk,\n    putImageThunk,\n    putProfileThunk,\n    getStatusThunk,\n    putStatusThunk,\n    addAdminThunk,\n    removeAdminThunk\n}))(ProfileContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport cn from 'classnames';\nimport { createFiled, Input } from '../../redux/reduxForm/formsControl';\nimport { requireField, maxLength } from '../../redux/reduxForm/validators';\nimport { postAuthThunk } from '../../redux/reducers/authReducer/authReducer';\nimport { getAuthData, getAuthCaptcha } from '../auth/authSelectors';\n\nconst maxSymbols = maxLength(32);\n\nconst Wrapper = ({ title, children, bclass }) => {\n    const content = <b className={bclass}>{title}</b>\n    return (\n        <div>\n            <label>\n                {!bclass && content}\n                <div className='input-block'>\n                    {bclass && content}\n                    {children}\n                </div>\n            </label>\n        </div>\n    )\n}\n\nconst LoginFields = ({ handleSubmit, error, captcha }) => {\n    const color = useSelector(state => state.theme.color);\n    return (\n        <div className='login-wrapper'>\n            <form onSubmit={handleSubmit} style={{ backgroundColor: color }} className={cn('profile-page', 'auth-page')}>\n                <div className='auth-card'>\n                    <h2>LOGIN</h2>\n                    <Wrapper title='EMAIL'>\n                        {createFiled(Input, 'email', [requireField, maxSymbols], 'text', 'input', 'Enter email')}\n                    </Wrapper>\n                    <Wrapper title='PASSWORD'>\n                        {createFiled(Input, 'password', [requireField, maxSymbols], 'password', 'input', 'Enter password')}\n                    </Wrapper>\n                    <Wrapper title='Remember me' bclass='remember'>\n                        {createFiled(Input, 'checkbox', [requireField], 'checkbox')}\n                    </Wrapper>\n                    {error && <div className='error_message'>{error}</div>}\n                    {captcha && <div className='captcha-wrapper'>\n                        <div><img src={captcha} alt='' /></div>\n                        {createFiled(Input, 'captcha', [requireField])}\n                    </div>}\n                    <button className='form-button'>Login</button>\n                    <a href='https://social-network.samuraijs.com/signUp' target='_blank' className='form-button'>\n                        Create account?\n                    </a>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'authpage' })(LoginFields);\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => getAuthData(state));\n    const captcha = useSelector(state => getAuthCaptcha(state));\n\n    function data(e) {\n        dispatch(postAuthThunk(e.email, e.password, e.checkbox, e.captcha));\n    }\n    \n    if (auth.isAuth) {\n        return <Redirect to='/profile' />\n    }\n    return <LoginReduxForm onSubmit={data} captcha={captcha} />\n}\n\nexport default Login;","import React, { Fragment } from 'react';\nimport '../../App.css';\nimport Wrapper from '../hoc/Wrapper';\n\nconst Updates = () => {\n    let upd = <span className='new-update'>new</span>\n    return (\n        <Fragment>\n            <div className='wrapper-updates'>\n                <Wrapper>\n                    <div className='updates-block'>\n                        <div className='updates-title'>Update 2.1</div>\n                        <div className='updates-info'>Во втором обновлении доработаны и исправлены некоторые элементы, а именно:</div>\n                        <ul>\n                            <li>Фиксированная навигация сайта;</li>\n                            <li>Добавление раздела обновлений;</li>\n                            <li>При авторизации/выходе появляется надпись соответствующая надпись;</li>\n                            <li>Возможность задавать второстепенный цвет сайта;</li>\n                            <li>Переключатель между страницами теперь адаптивный;</li>\n                            <li>Список пользователей, на которых вы подписаны теперь отображается в вашем профиле;</li>\n                            <li>Исправлены некоторые баги, связанные с профилем; {upd}</li>\n                            <li>Добавлена админ-панель; {upd}</li>\n                        </ul>\n                        <div className='updates-end'>\n                            <div>Ну а на этом пока все, спасибо за то, что Вы остаетесь с нами!</div>\n                            <div>С уважаением, команада Haries Network!</div>\n                        </div>\n                    </div>\n                </Wrapper>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Updates;","import React from 'react';\nimport '../../App.css';\n\nconst AuthMsg = ({ children }) => (\n    <div className='authorized-message'>\n        {children}\n    </div>\n)\n\nexport default AuthMsg;","import React, { useEffect, Fragment } from 'react';\nimport { HashRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './redux/store/store';\nimport ProfileContainer from './components/profile/ProfileContainer';\nimport Login from './components/login/Login';\nimport { setInitializingThunk } from './redux/reducers/appReducer/appReducer';\nimport { WithSuspense } from './components/hoc/withSuspense';\nimport Updates from \"./components/updates/Updates\";\nimport { setActualAuthCreator, setActualDeauthCreator } from './redux/reducers/authReducer/authReducer';\nimport AuthMsg from './components/hoc/AuthMsg';\nimport { getAdminThunk, getTechAdminThunk } from './redux/reducers/profileReducer/profileReducer';\n\nconst Users = React.lazy(() => import('./components/users/Users'));\n\nconst Project = () => {\n    const dispatch = useDispatch();\n    const initializing = useSelector(state => state.app.initializing);\n    const globalError = useSelector(state => state.app.globalError);\n    const count = useSelector(state => state.app.count);\n    const data = useSelector(state => state.auth.data);\n    const isActualAuth = useSelector(state => state.auth.isActualAuth);\n    const isActualDeauth = useSelector(state => state.auth.isActualDeauth);\n    \n    useEffect(() => {\n        dispatch(setInitializingThunk());\n        dispatch(getAdminThunk());\n        dispatch(getTechAdminThunk());\n    }, []);\n\n    let content = isActualAuth && <AuthMsg>Вы успешно вошли!</AuthMsg>\n\n    if (isActualDeauth) {\n        content = <AuthMsg>Вы успешно вышли!</AuthMsg>\n    }\n\n    if (isActualAuth || isActualDeauth) {\n        setTimeout(() => {\n            dispatch(setActualAuthCreator(false));\n            dispatch(setActualDeauthCreator(false));\n        }, 5000);\n    }\n\n    return (\n        <Fragment>\n            <div className='app-theme'>\n                <Header />\n                {globalError && (\n                    <div className='global-block'>\n                        <span className='global-error'>{globalError.toString()} ({count})</span>\n                    </div>\n                )}\n                {content}\n                {initializing\n                ? <Switch>\n                    <Redirect exact from='/' to='/profile' />\n                    <Redirect exact from={`/profile/${data.id}`} to='/profile' />\n                    <Route path='/login' component={Login} />\n                    <Route path='/updates' component={Updates} />\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                    <Route path='/users' render={WithSuspense(Users)} />\n                    <Route path='*' render={() => <div className='users-loader'>404: Not Found</div>} />\n                </Switch>\n                : <div className='users-loader'>INITIALIZING...</div>}\n            </div>\n        </Fragment>\n    )\n}\n\nconst App = () => (\n    <HashRouter>\n        <Provider store={store}>\n            <Project />\n        </Provider>\n    </HashRouter>\n)\n\nexport default App;","import React from 'react';\nimport '../../App.css';\n\nexport const WithSuspense = Component => () => (\n    <React.Suspense fallback={<div className='users-loader'>SUSPENSE LOADING...</div>}>\n        <Component />\n    </React.Suspense>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { getAuthThunk } from \"../authReducer/authReducer\";\n\nconst SET_INITIALIZING = 'my-app/appReducer/SET-INITIALIZING';\nconst SET_GLOBAL_ERROR = 'my-app/appReducer/SET-GLOBAL-ERROR';\nconst SET_COUNT = 'my-app/appReducer/SET-COUNT';\n\nconst initialState = {\n    initializing: false,\n    count: 5,\n    globalError: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZING: return { ...state, initializing: true };\n        case SET_COUNT: return { ...state, count: action.count };\n        case SET_GLOBAL_ERROR: return { ...state, globalError: action.err };\n        default: return state;\n    }\n}\n\nconst setInitializing = () => ({ type: SET_INITIALIZING });\nconst setGlobalErorr = err => ({ type: SET_GLOBAL_ERROR, err });\nconst setCount = count => ({ type: SET_COUNT, count });\n\nexport const setInitializingThunk = () => async dispatch => {\n    await dispatch(getAuthThunk());\n    dispatch(setInitializing());\n}\n\nexport const setGlobalErrorThunk = error => (dispatch, getState) => {\n    dispatch(setGlobalErorr(error));\n    let count = getState().app.count;\n    const int = setInterval(() => {\n        dispatch(setCount(count -= 1));\n        if (count === 0) {\n            dispatch(setGlobalErorr(null));\n            dispatch(setCount(5));\n            clearInterval(int);\n        }\n    }, 1000);\n}\n\nexport default appReducer;","export const getThemeColor = state => {\n    return state.theme.color;\n}","export const followLogic = (state, id, bolean) => ({\n    ...state, users: state.users.map(user => {\n        if (user.id === id) {\n            return { ...user, followed: bolean };\n        }\n        return user;\n    })\n})\n\nexport const followThunk = async (request, id, dispatch, actionCreator, setDisabled, setGlobalErrorThunk) => {\n    try {\n        dispatch(setDisabled(true, id));\n        const response = await request(id);\n        if (response.data.resultCode === 0) {\n            dispatch(actionCreator(id));\n        }\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    } finally {\n        dispatch(setDisabled(false, id));\n    }\n}\n","import { usersAPI, followAPI } from \"../../../api/ajax\";\nimport { setGlobalErrorThunk } from \"../appReducer/appReducer\";\nimport { followThunk, followLogic } from '../../../objects-helper/patterns';\n\nconst GET_USERS = 'my-app/usersReducer/GET-USERS';\nconst POST_FOLLOW = 'my-app/usersReducer/POST-FOLLOW';\nconst DELETE_FOLLOW = 'my-app/usersReducer/DELETE-FOLLOW';\nconst SET_DISABLED = 'my-app/usersReducer/SET-DISABLED';\nconst SET_LOADER = 'my-app/usersReducer/SET-LOADER';\nconst GET_TOTAL_COUNT = 'my-app/usersReducer/GET-TOTAL-COUNT';\nconst SET_CURRENT_PAGE = 'my-app/usersReducer/SET-CURRENT-PAGE';\n\nconst initialState = {\n    users: [],\n    isDisabled: [5558],\n    isLoad: false,\n    currentPage: 2,\n    pageCount: 30,\n    totalCount: null\n}\n\nconst handlers = {\n    [GET_USERS]: (state, { users }) => ({\n        ...state, users\n    }),\n    [POST_FOLLOW]: (state, { id }) => followLogic(state, id, true),\n    [DELETE_FOLLOW]: (state, { id }) => followLogic(state, id, false),\n    [SET_DISABLED]: (state, { bolean, userId }) => ({\n        ...state, isDisabled: bolean\n        ? [...state.isDisabled, userId]\n        : state.isDisabled.filter(id => id !== userId)\n    }),\n    [SET_LOADER]: (state, { isLoad }) => ({\n        ...state, isLoad\n    }),\n    [GET_TOTAL_COUNT]: (state, { totalCount }) => ({\n        ...state, totalCount\n    }),\n    [SET_CURRENT_PAGE]: (state, { currentPage }) => ({\n        ...state, currentPage\n    }),\n    DEFAULT: state => state\n}\n\nconst usersReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getUsersCreator = users => ({ type: GET_USERS, users });\nconst followCreator = id => ({ type: POST_FOLLOW, id });\nconst unfollowCreator = id => ({ type: DELETE_FOLLOW, id });\nconst setDisabled = (bolean, userId) => ({ type: SET_DISABLED, bolean, userId });\nconst setLoader = isLoad => ({ type: SET_LOADER, isLoad });\nconst getTotalCount = totalCount => ({ type: GET_TOTAL_COUNT, totalCount });\nconst setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\n\nexport const getUsersThunk = (page = 1, count = 30) => async dispatch => {\n    try {\n        dispatch(setLoader(true));\n        const response = await usersAPI.getUsers(page, count);\n        dispatch(getUsersCreator(response.data.items));\n        dispatch(getTotalCount(response.data.totalCount));\n        dispatch(setCurrentPage(page));\n        dispatch(setLoader(false));\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    }\n}\n\nexport const follow = id => dispatch => {\n    followThunk(followAPI.postFollow, id, dispatch, followCreator, setDisabled, setGlobalErrorThunk);\n}\n\nexport const unfollow = id => dispatch => {\n    followThunk(followAPI.deleteFollow, id, dispatch, unfollowCreator, setDisabled, setGlobalErrorThunk);\n}\n\nexport default usersReducer;","export const getProfileData = state => {\n    return state.profilePage.profile;\n}\n\nexport const getProfileStatus = state => {\n    return state.profilePage.status;\n}\n\nexport const getProfileIsAdmin = state => {\n    return state.profilePage.isAdmin;\n}\n\nexport const getProfileIsTechAdmin = state => {\n    return state.profilePage.isTechAdmin;\n}"],"sourceRoot":""}