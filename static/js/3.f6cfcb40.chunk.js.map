{"version":3,"sources":["paginator/paginator.jsx","components/users/Users.jsx"],"names":["Paginator","totalCount","currentPage","changePage","color","useSelector","state","getThemeColor","useState","port","setPort","useEffect","setWidth","window","innerWidth","addEventListener","removeEventListener","pages","portCount","Math","ceil","i","push","portSize","portion","setPortion","left","right","onClick","style","borderColor","className","filter","e","map","backgroundColor","updatePage","key","Users","dispatch","useDispatch","users","getUsersData","isDisabled","getUsersIsDisabled","isLoad","getUsersIsLoad","getUsersTotalCount","getUsersCurrentPage","data","getAuthData","isTechAdmin","getProfileIsTechAdmin","isAdmin","getProfileIsAdmin","loadUsers","useCallback","page","getUsersThunk","id","some","code","name","align","to","src","photos","large","alt","width","isAuth","followed","disabled","unfollow","follow"],"mappings":"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","file":"static/js/3.f6cfcb40.chunk.js","sourcesContent":["import React, { useEffect, Fragment, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../App.css';\nimport { getThemeColor } from '../components/theme/themeSelectors';\n\nconst Paginator = ({ totalCount, currentPage, changePage }) => {\n    const color = useSelector(state => getThemeColor(state));\n    const [port, setPort] = useState(10);\n\n    useEffect(() => {\n        if (window.innerWidth < 500) {\n            setWidth();\n        }\n        function setWidth() {\n            if (window.innerWidth < 500) {\n                setPort(5);\n            } else {\n                setPort(10);\n            }\n        }\n        window.addEventListener('resize', setWidth);\n        return () => window.removeEventListener('resize', setWidth);\n    }, []);\n\n    const pages = [];\n\n    const portCount = Math.ceil(totalCount / 30);\n\n    for (let i = 1; i <= portCount; i++) {\n        pages.push(i);\n    }\n\n    const portSize = Math.ceil(portCount / port);\n    \n    const [portion, setPortion] = useState(1);\n    const left = (portion - 1) * port + 1;\n    const right = portion * port;\n    \n    const updatePage = e => {\n        if (e !== currentPage) {\n            changePage(e);\n        }\n    }\n    return (\n        <Fragment>\n            <div>{\n                portion > 1 && <span onClick={() => setPortion(portion - 1)} style={{ borderColor: color }} className='paginator'>{'<'}</span>\n            }{\n                pages.filter(e => e >= left && e <= right).map(e => (\n                    <div style={{ borderColor: color }, currentPage === e ? { backgroundColor: color, borderColor: color } : { borderColor: color }} className={currentPage === e ? 'paginator-active' : 'paginator'} onClick={() => updatePage(e)} key={e}>\n                        <span>{e}</span>\n                    </div>\n                ))\n            }{\n                portion < portSize && <span onClick={() => setPortion(portion + 1)} style={{ borderColor: color }} className='paginator'>{'>'}</span>\n            }</div>\n        </Fragment>\n    )\n}\n\nexport default Paginator;","import React, { useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUsersThunk, follow, unfollow } from '../../redux/reducers/usersReducer/usersReducer';\nimport { getUsersData, getUsersIsDisabled, getUsersIsLoad, getUsersTotalCount, getUsersCurrentPage } from './usersSelectors';\nimport Paginator from '../../paginator/paginator';\nimport { getThemeColor } from '../theme/themeSelectors';\nimport { getAuthData } from '../auth/authSelectors';\nimport { getProfileIsTechAdmin, getProfileIsAdmin } from '../profile/profileSelectors';\n\nconst Users = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => getUsersData(state));\n    const isDisabled = useSelector(state => getUsersIsDisabled(state));\n    const isLoad = useSelector(state => getUsersIsLoad(state));\n    const totalCount = useSelector(state => getUsersTotalCount(state));\n    const currentPage = useSelector(state => getUsersCurrentPage(state));\n    const color = useSelector(state => getThemeColor(state));\n    const data = useSelector(state => getAuthData(state));\n    const isTechAdmin = useSelector(state => getProfileIsTechAdmin(state));\n    const isAdmin = useSelector(state => getProfileIsAdmin(state));\n\n    const loadUsers = useCallback(page => dispatch(getUsersThunk(page)), [getUsersThunk]);\n\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    const changePage = page => {\n        loadUsers(page);\n    }\n\n    const userImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/User_icon_2.svg/220px-User_icon_2.svg.png';\n    return (\n        <div className='users-wrapper'>\n            <span className='users-title'>All users of this site</span>\n            <Paginator totalCount={totalCount} currentPage={currentPage} changePage={changePage} />\n            {isLoad\n            ? <div className='users-loader'>LOADING...</div>\n            : <div className='parrent-block'>{\n                users.map(e => (\n                    <div style={{ backgroundColor: color }} className='user-block' key={e.id}>\n                        {isTechAdmin.some(id => id.code === e.id)\n                        ? <div className='profile-techadmin-info'>{e.name} | {e.id}</div>\n                        : !isAdmin.some(id => id.code === e.id)\n                        ? <div>{e.name} | {e.id}</div>\n                        : <div className='profile-admin-info'>{e.name} | {e.id}</div>}\n                        <div align='center'>\n                            <Link to={`/profile/${e.id}`}>\n                                <img src={e.photos.large || userImage} alt='' width='60%' />\n                            </Link>\n                        </div>\n                        <div>{\n                            data.isAuth\n                            ? e.id === data.id\n                            ? <Link to='/profile' className='button'>Мой профиль</Link>\n                            : e.followed\n                            ? <button className='button' disabled={isDisabled.some(id => id === e.id)} onClick={() => dispatch(unfollow(e.id))}>Отписаться</button>\n                            : <button className='button' disabled={isDisabled.some(id => id === e.id)} onClick={() => dispatch(follow(e.id))}>Подписаться</button>\n                            : <Link to='/login' className='button'>Войдите</Link>\n                        }</div>\n                    </div>\n                ))\n            }</div>\n        }\n        </div>\n    )\n}\n\nexport default Users;"],"sourceRoot":""}