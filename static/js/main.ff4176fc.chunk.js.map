{"version":3,"sources":["api/ajax.js","redux/reducers/authReducer/authReducer.js","redux/reducers/themeReducer/themeReducer.js","components/auth/Auth.jsx","components/theme/Theme.jsx","components/header/Header.jsx","redux/reducers/profileReducer/profileReducer.js","redux/reduxForm/validators.js","redux/store/store.js","redux/reduxForm/formsControl.js","components/profile/ProfileDataForm.jsx","components/profile/ProfileStatus.jsx","components/hoc/Wrapper.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/login/Login.jsx","components/updates/Updates.jsx","components/hoc/AuthMsg.jsx","App.js","components/hoc/withSuspense.jsx","serviceWorker.js","index.js","redux/reducers/appReducer/appReducer.js","redux/reducers/usersReducer/usersReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","page","count","get","followAPI","postFollow","id","post","deleteFollow","delete","profileAPI","getProfile","putImage","img","formData","FormData","append","put","putProfile","obj","getStatus","putStatus","status","authAPI","getAuth","postAuth","email","password","rememberMe","captcha","deleteAuth","captchaAPI","getCaptcha","GET_AUTH","initialState","data","isAuth","isActualAuth","isActualDeauth","handlers","state","bol","getAuthCreator","login","type","getCaptchaCreator","setActualAuthCreator","setActualDeauthCreator","getAuthThunk","dispatch","a","response","resultCode","postAuthThunk","request","url","stopSubmit","_error","messages","logoutMeThunk","authReducer","action","handler","DEFAULT","SET_COLOR","color","setThemeColorCreator","themeReducer","Auth","useDispatch","useState","active","setActive","useSelector","auth","theme","loadData","useCallback","useEffect","onMouseOver","onClick","className","to","onMouseOut","style","backgroundColor","activeClassName","Button","children","e","target","innerHTML","innerText","Theme","Header","setNavBar","link","src","width","alt","maxLength","GET_PROFILE","PUT_IMAGE","GET_STATUS","profile","getStatusCreator","putImageCreator","getProfileThunk","profileReducer","photos","reducers","combineReducers","form","formReducer","usersPage","usersReducer","profilePage","app","appReducer","store","createStore","applyMiddleware","thunk","FormsControl","meta","touched","error","hasError","toString","Input","props","input","Textarea","createFiled","component","name","validate","placeholder","Field","reduxForm","handleSubmit","contacts","onSubmit","Object","keys","map","key","ProfileStatus","isOwner","putStatusThunk","editMode","setEditMode","value","setValue","onChange","onBlur","autoFocus","Wrapper","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","putImageThunk","putProfileThunk","users","loadUsers","getUsersThunk","userImage","fullName","userId","large","files","length","then","initialValues","filter","followed","ProfileContainer","this","match","params","history","push","getStatusThunk","prop","componentDidMount","React","Component","compose","withRouter","connect","getState","Promise","reject","requireField","maxSymbols","title","bclass","content","LoginReduxForm","cn","href","Login","console","log","checkbox","Updates","AuthMsg","Users","lazy","Project","initializing","globalError","setInitializingThunk","setTimeout","exact","from","path","render","Suspense","fallback","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_INITIALIZING","SET_GLOBAL_ERROR","SET_COUNT","setGlobalErorr","err","setCount","setGlobalErrorThunk","int","setInterval","clearInterval","GET_USERS","isDisabled","isLoad","currentPage","pageCount","totalCount","followLogic","bolean","user","followThunk","actionCreator","setDisabled","getUsersCreator","followCreator","unfollowCreator","setLoader","getTotalCount","setCurrentPage","items","follow","unfollow"],"mappings":"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","file":"static/js/main.ff4176fc.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '11452ed1-3660-45e9-b8d1-a254f78a41b8'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(page, count) {\n        return instance.get(`users?page=${page}&count=${count}`);\n    }\n}\n\nexport const followAPI = {\n    postFollow(id) {\n        return instance.post(`follow/${id}`);\n    },\n    deleteFollow(id) {\n        return instance.delete(`follow/${id}`);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`profile/${id}`);\n    },\n    putImage(img) {\n        const formData = new FormData();\n        formData.append('image', img);\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    putProfile(obj) {\n        return instance.put('profile', obj);\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`);\n    },\n    putStatus(status) {\n        return instance.put('profile/status', { status });\n    }\n}\n\nexport const authAPI = {\n    getAuth() {\n        return instance.get('auth/me');\n    },\n    postAuth(email, password, rememberMe, captcha) {\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\n    },\n    deleteAuth() {\n        return instance.delete('auth/login');\n    }\n}\n\nexport const captchaAPI = {\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    }\n}","import { authAPI, captchaAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_AUTH = 'my-app/authReducer/GET-AUTH';\nconst GET_CAPTCHA ='my-app/authReducer/GET-CAPTCHA';\nconst SET_ACTUAL_AUTH = 'my-app/authReducer/SET-ACTUAL-AUTH';\nconst SET_ACTUAL_DEAUTH = 'my-app/authReducer/SET-ACTUAL-DEAUTH';\n\nconst initialState = {\n    data: {\n        isAuth: false\n    },\n    captcha: null,\n    isActualAuth: false,\n    isActualDeauth: false\n}\n\nconst handlers = {\n    [GET_AUTH]: (state, { data, isAuth }) => ({\n        ...state, data: { ...data, isAuth }\n    }),\n    [GET_CAPTCHA]: (state, { captcha }) => ({\n        ...state, captcha\n    }),\n    [SET_ACTUAL_AUTH]: (state, { bol }) => ({\n        ...state, isActualAuth: bol\n    }),\n    [SET_ACTUAL_DEAUTH]: (state, { bol }) => ({\n        ...state, isActualDeauth: bol\n    }),\n    DEFAULT: state => state\n}\n\nconst authReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getAuthCreator = (id, login, email, isAuth) => ({ type: GET_AUTH, data: { id, login, email }, isAuth });\nconst getCaptchaCreator = captcha => ({ type: GET_CAPTCHA, captcha });\nexport const setActualAuthCreator = bol => ({ type: SET_ACTUAL_AUTH, bol });\nexport const setActualDeauthCreator = bol => ({ type: SET_ACTUAL_DEAUTH, bol });\n\nexport const getAuthThunk = () => async dispatch => {\n    const response = await authAPI.getAuth();\n    if (response.data.resultCode === 0) {\n        const { id, login, email } = response.data.data;\n        dispatch(getAuthCreator(id, login, email, true));\n    }\n}\n\nexport const postAuthThunk = (email, password, rememberMe, captcha) => async dispatch => {\n    const response = await authAPI.postAuth(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthThunk());\n        dispatch(getCaptchaCreator(null));\n        dispatch(setActualAuthCreator(true));\n    } else {\n        if (response.data.resultCode === 10) {\n            const request = await captchaAPI.getCaptcha();\n            dispatch(getCaptchaCreator(request.data.url));\n        }\n        dispatch(stopSubmit('authpage', { _error: response.data.messages[0] }));\n    }\n}\n\nexport const logoutMeThunk = () => async dispatch => {\n    const response = await authAPI.deleteAuth();\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthCreator(null, null, null, false));\n    }\n}\n\nexport default authReducer;","const SET_COLOR = 'my-app/themeReducer/SET-COLOR';\n\nconst initialState = {\n    color: '#3959ab'\n}\n\nconst themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_COLOR: return { ...state, color: action.color };\n        default: return state;\n    }\n}\n\nexport const setThemeColorCreator = color => ({ type: SET_COLOR, color });\n\nexport default themeReducer;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getAuthThunk, logoutMeThunk, setActualDeauthCreator } from '../../redux/reducers/authReducer/authReducer';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const [active, setActive] = useState(false);\n    const data = useSelector(state => state.auth.data);\n    const color = useSelector(state => state.theme.color);\n\n    const loadData = useCallback(() => dispatch(getAuthThunk()), [getAuthThunk]);\n    \n    useEffect(() => {\n        loadData();\n    }, []);\n\n    const closeForm = () => {\n        if (active) {\n            setActive(false);\n        }\n    }\n\n    const logoutForm = () => {\n        setActive(false);\n        dispatch(logoutMeThunk());\n        dispatch(setThemeColorCreator('#3959ab'));\n        dispatch(setActualDeauthCreator(true));\n    }\n    return (\n        <Fragment>{\n            data.isAuth\n            ? <div>\n                <Link onMouseOver={() => setActive(true)} onClick={closeForm} className='auth-user' to='/profile'>{data.login}</Link>\n                {active && <span\n                    onMouseOut={() => setActive(false)}\n                    className='logout'\n                    onClick={logoutForm}\n                    style={{ backgroundColor: color }}>\n                        Log Out\n                    </span>}\n            </div>\n            : <NavLink className='auth-login' activeClassName='auth-login-active' to='/login'>LOGIN</NavLink>\n        }</Fragment>\n    )\n}\n\nexport default Auth;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\n\nconst Button = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const changeTheme = e => {\n        if (e.target.innerHTML === 'Blue') {\n            return dispatch(setThemeColorCreator('#3959ab'));\n        } else {\n            return dispatch(setThemeColorCreator(e.target.innerText));\n        }\n    }\n    return <div onClick={changeTheme} className='theme-button'>{children}</div>\n}\n\nconst Theme = () => {\n    const color = useSelector(state => state.theme.color);\n\n    return (\n        <div style={{ backgroundColor: color }} className='theme-colors'>\n            <Button>Blue</Button>\n            <Button>Green</Button>\n            <Button>Orange</Button>\n            <Button>Red</Button>\n        </div>\n    )\n}\n\nexport default Theme;","import React, { useState, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport '../../App';\nimport Auth from '../auth/Auth';\nimport Theme from '../theme/Theme';\n\nconst Header = () => {\n    const color = useSelector(state => state.theme.color);\n    const data = useSelector(state => state.auth.data);\n    const [active, setActive] = useState(false);\n\n    const setNavBar = (url, link) => {\n        return (\n            <div>\n                <NavLink className='route' to={url}>\n                    {link}\n                </NavLink>\n            </div>\n        )\n    }\n\n    const selectActive = () => {\n        if (active) {\n            return setActive(false);\n        } else {\n            return setActive(true);\n        }\n    }\n\n    const url = 'https://s3.amazonaws.com/www-inside-design/uploads/2019/08/color_wheel-810x810.png';\n    return (\n        <Fragment>\n            <div className='header-wrapper'>\n                <div className='header' style={{ backgroundColor: color }}>\n                    <div className='title'>\n                        <span>Haries Network</span>\n                        <span className='beta-title'>beta</span>\n                    </div>\n                    <span className='border-title'>|</span>\n                    {data.isAuth && (\n                        <div>\n                            <img\n                                className='color-img'\n                                onClick={selectActive}\n                                src={url}\n                                width={30}\n                                alt=''\n                            />\n                            {active && <Theme />}\n                        </div>\n                    )}\n                    {setNavBar('/updates', 'UPDATES')}\n                    {setNavBar('/profile', 'PROFILE')}\n                    {setNavBar('/users', 'USERS')}\n                    <Auth />\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Header;","import { profileAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_PROFILE = 'my-app/profileReducer/GET-PROFILE';\nconst PUT_IMAGE = 'my-app/profileReducer/PUT-IMAGE';\nconst GET_STATUS = 'my-app/profileReducer/GET-STATUS';\n\nconst initialState = {\n    profile: null,\n    status: null\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROFILE:\n        case GET_STATUS: return { ...state, ...action.data };\n        case PUT_IMAGE: return { ...state, profile: { ...state.profile, photos: action.img } };\n        default: return state;\n    }\n}\n\nconst getProfileCreator = profile => ({ type: GET_PROFILE, data: { profile } });\nconst getStatusCreator = status => ({ type: GET_STATUS, data: { status } })\nconst putImageCreator = img => ({ type: PUT_IMAGE, img });\n\nexport const getProfileThunk = id => async dispatch => {\n    const response = await profileAPI.getProfile(id);\n    dispatch(getProfileCreator(response.data));\n}\n\nexport const putImageThunk = img => async dispatch => {\n    const response = await profileAPI.putImage(img);\n    if (response.data.resultCode === 0) {\n        dispatch(putImageCreator(response.data.data.photos));\n    }\n}\n\nexport const putProfileThunk = obj => async (dispatch, getState) => {\n    const id = getState().auth.data.id;\n    const response = await profileAPI.putProfile(obj);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfileThunk(id));\n    } else {\n        dispatch(stopSubmit('profilepage', { _error: response.data.messages[0] }));\n        return Promise.reject();\n    }\n}\n\nexport const getStatusThunk = id => async dispatch => {\n    const response = await profileAPI.getStatus(id);\n    dispatch(getStatusCreator(response.data));\n}\n\nexport const putStatusThunk = status => async dispatch => {\n    const response = await profileAPI.putStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(getStatusCreator(status));\n    }\n}\n\nexport default profileReducer;","export const requireField = value => {\n    if (!value) return 'Field is require!';\n}\n\nexport const maxLength = maxLength => value => {\n    if (value.length > maxLength) return `Max legnth is ${maxLength} symbols!`;\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport usersReducer from '../reducers/usersReducer/usersReducer';\nimport profileReducer from '../reducers/profileReducer/profileReducer';\nimport authReducer from '../reducers/authReducer/authReducer';\nimport appReducer from '../reducers/appReducer/appReducer';\nimport themeReducer from '../reducers/themeReducer/themeReducer';\n\nconst reducers = combineReducers({\n    form: formReducer,\n    usersPage: usersReducer,\n    profilePage: profileReducer,\n    auth: authReducer,\n    app: appReducer,\n    theme: themeReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { Field } from 'redux-form';\nimport '../../App.css';\n\nconst FormsControl = ({ meta: { touched, error }, children }) => {\n    const hasError = touched && error;\n    return (\n        <>\n            {children}\n            {hasError && <div className='warning_field'>\n                <b>{error.toString()}</b>\n            </div>}\n        </>\n    )\n}\n\nexport const Input = props => (\n    <FormsControl { ...props }><input { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const Textarea = props => (\n    <FormsControl { ...props }><textarea { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const createFiled = (component, name, validate, type, className, placeholder) => (\n    <Field\n        className={className}\n        component={component}\n        name={name}\n        validate={validate}\n        type={type}\n        placeholder={placeholder}\n    />\n)","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createFiled, Input, Textarea } from '../../redux/reduxForm/formsControl';\nimport '../../App.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile: { contacts }, error }) => (\n    <form onSubmit={handleSubmit}>\n        {error && <h2>{error}</h2>}\n        <div className='profile-form'>\n            <div><b>ABOUT ME:</b> <div className='edit-button'>\n                <button className='button'>SAVE</button>\n            </div> <div>{createFiled(Textarea, 'aboutMe', [])}</div></div>\n            <div><b>SEARCH JOB:</b> {createFiled(Input, 'lookingForAJob', [], 'checkbox')}</div>\n            <div><b>MY SKILLS:</b> <div>{createFiled(Textarea, 'lookingForAJobDescription', [])}</div></div>\n        </div>\n        <div>\n            <hr color='white' />\n            <b>SOCIAL NETWORKS</b>\n            <hr color='white' />\n        </div>\n        <div>{\n            Object.keys(contacts).map(e => (\n                <div className='profile-field' key={e}>\n                    <b className='profile-networks'>{e}:</b> \n                    <span>\n                        {createFiled(Input, `contacts.${e}`, [])}\n                    </span>\n                </div>\n            ))\n        }</div>\n    </form>\n);\n\nexport default reduxForm({ form: 'profilepage' })(ProfileDataForm);","import React, { Fragment, useState, useEffect } from 'react';\n\nconst ProfileStatus = ({ status, isOwner, putStatusThunk }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(status);\n\n    useEffect(() => {\n        setValue(status);\n    }, [status]);\n\n    const activateEditMode = () => {\n        if (isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        putStatusThunk(value);\n    }\n\n    const changeStatus = e => {\n        setValue(e.target.value);\n    }\n    return (\n        <Fragment>{\n            editMode\n            ? <input onChange={changeStatus} onBlur={deactivateEditMode} value={value} maxLength={19} autoFocus={true} />\n            : <span onClick={activateEditMode}>{value || '----'}</span>\n        }</Fragment>\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\n\nconst Wrapper = ({ children }) => {\n    const color = useSelector(state => state.theme.color);\n\n    return (\n        <div className='wrapper-profile'>\n            <div style={{ backgroundColor: color }} className='profile-page'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Wrapper;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileStatus from './ProfileStatus';\nimport Wrapper from '../hoc/Wrapper';\nimport { getUsersThunk } from '../../redux/reducers/usersReducer/usersReducer';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({ profile, isOwner, putImageThunk, putProfileThunk, status, ...props }) => {\n    const [editMode, setEditMode] = useState(false);\n    const users = useSelector(state => state.usersPage.users);\n    const dispatch = useDispatch();\n\n    const loadUsers = useCallback(() => dispatch(getUsersThunk()), [getUsersThunk]);\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    if (!profile) {\n        return <div className='users-loader'>Loading...</div>\n    }\n\n    const changeImage = e => {\n        if (e.target.files.length) {\n            putImageThunk(e.target.files[0]);\n        }\n    }\n\n    const saveProfile = e => {\n        putProfileThunk(e)\n        .then(() => setEditMode(false));\n    }\n\n    const userImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/User_icon_2.svg/220px-User_icon_2.svg.png';\n    return (\n        <Fragment>\n            <Wrapper>\n                <div className='profile-flex'>\n                    <div className='profile-oneblock'>\n                        <div className='profile-info'>{profile.fullName} | {profile.userId}</div>\n                        <div><img className='profile-img' src={profile.photos.large || userImage} alt='' /></div>\n                        {isOwner && <input type='file' onChange={changeImage} />}\n                        <div className='profile-status'>STATUS: <ProfileStatus status={status} isOwner={isOwner} { ...props } /></div>\n                    </div>\n                    <div className='profile-twoblock'>\n                        {!editMode\n                            ? <ProfileData onClick={() => setEditMode(true)} isOwner={isOwner} profile={profile} />\n                            : <ProfileDataForm onSubmit={saveProfile} initialValues={profile} profile={profile} />}\n                    </div>\n                    {isOwner && <div className='followers-wrapper'>\n                        <span className='follow-title'>подписки</span>\n                        <div className='followers-block'>\n                            {users.filter(e => e.followed === true).map(({ id, name, photos, followed }) => (\n                                <div key={id}>\n                                    <Link className='image-wrapper' to={`/profile/${id}`}>\n                                        <img className='image-user' src={photos.large || userImage} alt='' />\n                                    </Link>\n                                    <div className='follower-name'>{name}</div>\n                                </div>\n                            ))}\n                            <div className='followers-info'>найти друзей можно во вкладке users</div>\n                        </div>\n                    </div>}\n                </div>\n            </Wrapper>\n        </Fragment>\n    )\n}\n\nconst ProfileData = ({ isOwner, onClick, profile: { contacts, aboutMe, lookingForAJob, lookingForAJobDescription } }) => {\n    return (\n        <Fragment>\n            {isOwner && <div className='edit-button'>\n                <button className='button' onClick={onClick}>EDIT</button>\n            </div>}\n            <div><b>ABOUT ME:</b> {aboutMe && aboutMe.toString()}</div>\n            <div><b>SEARCH JOB:</b> {lookingForAJob ? 'YES' : 'NO'}</div>\n            <div><b>MY SKILLS:</b> {lookingForAJobDescription && lookingForAJobDescription.toString()}</div>\n            <div>\n                <hr color='white' />\n                <b>SOCIAL NETWORKS</b>\n                <hr color='white' />\n            </div>\n            <div>{\n                Object.keys(contacts).map(e => (\n                    <div key={e}>{contacts[e] && <><b className='profile-networks'>{e}:</b> {contacts[e]}</>}</div>\n                ))\n            }</div>\n        </Fragment>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfileThunk, putImageThunk, putProfileThunk, getStatusThunk, putStatusThunk } from '../../redux/reducers/profileReducer/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let id = this.props.match.params.userId;\n        if (!id) {\n            id = this.props.data.id;\n            if (!id) {\n                this.props.history.push('/login');\n            }\n        }\n        if (this.props.data.isAuth || this.props.match.params.userId) {\n            this.props.getProfileThunk(id);\n            this.props.getStatusThunk(id);\n        }\n    }\n    \n    componentDidUpdate(prop) {\n        if (prop.match.params.userId !== this.props.match.params.userId ||\n            prop.data.isAuth !== this.props.data.isAuth) {\n            this.componentDidMount();\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId} { ...this.props } />\n    }\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    data: state.auth.data\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n    getProfileThunk,\n    putImageThunk,\n    putProfileThunk,\n    getStatusThunk,\n    putStatusThunk\n}))(ProfileContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport cn from 'classnames';\nimport { createFiled, Input } from '../../redux/reduxForm/formsControl';\nimport { requireField, maxLength } from '../../redux/reduxForm/validators';\nimport { postAuthThunk, setActualAuthCreator } from '../../redux/reducers/authReducer/authReducer';\n\nconst maxSymbols = maxLength(32);\n\nconst Wrapper = ({ title, children, bclass }) => {\n    const content = <b className={bclass}>{title}</b>\n    return (\n        <div>\n            <label>\n                {!bclass && content}\n                <div className='input-block'>\n                    {bclass && content}\n                    {children}\n                </div>\n            </label>\n        </div>\n    )\n}\n\nconst LoginFields = ({ handleSubmit, error, captcha }) => {\n    const color = useSelector(state => state.theme.color);\n    return (\n        <div className='login-wrapper'>\n            <form onSubmit={handleSubmit} style={{ backgroundColor: color }} className={cn('profile-page', 'auth-page')}>\n                <div className='auth-card'>\n                    <h2>LOGIN</h2>\n                    <Wrapper title='EMAIL'>\n                        {createFiled(Input, 'email', [requireField, maxSymbols], 'text', 'input', 'Enter email')}\n                    </Wrapper>\n                    <Wrapper title='PASSWORD'>\n                        {createFiled(Input, 'password', [requireField, maxSymbols], 'password', 'input', 'Enter password')}\n                    </Wrapper>\n                    <Wrapper title='Remember me' bclass='remember'>\n                        {createFiled(Input, 'checkbox', [requireField], 'checkbox')}\n                    </Wrapper>\n                    {error && <div className='error_message'>{error}</div>}\n                    {captcha && <div className='captcha-wrapper'>\n                        <div><img src={captcha} alt='' /></div>\n                        {createFiled(Input, 'captcha', [requireField])}\n                    </div>}\n                    <button className='form-button'>Login</button>\n                    <a href='https://social-network.samuraijs.com/signUp' target='_blank' className='form-button'>\n                        Create account?\n                    </a>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'authpage' })(LoginFields);\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth.data);\n    const captcha = useSelector(state => state.auth.captcha);\n\n    function data(e) {\n        console.log(e);\n        dispatch(postAuthThunk(e.email, e.password, e.checkbox, e.captcha));\n    }\n    \n    if (auth.isAuth) {\n        return <Redirect to='/profile' />\n    }\n    return <LoginReduxForm onSubmit={data} captcha={captcha} />\n}\n\nexport default Login;","import React, { Fragment } from 'react';\nimport '../../App.css';\nimport Wrapper from '../hoc/Wrapper';\n\nconst Updates = () => {\n    return (\n        <Fragment>\n            <div className='wrapper-updates'>\n                <Wrapper>\n                    <div className='updates-block'>\n                        <div className='updates-title'>Update 2.0</div>\n                        <div className='updates-info'>Во втором обновлении доработаны и исправлены некоторые элементы, а именно:</div>\n                        <ul>\n                            <li>Фиксированная навигация сайта;</li>\n                            <li>Добавление раздела обновлений;</li>\n                            <li>При авторизации/выходе появляется надпись соответствующая надпись;</li>\n                            <li>Возможность задавать второстепенный цвет сайта;</li>\n                            <li>Переключатель между страницами теперь адаптивный;</li>\n                            <li>Список пользователей, на которых вы подписаны теперь отображается в вашем профиле;</li>\n                        </ul>\n                        <div className='updates-end'>\n                            <div>Ну а на этом пока все, спасибо за то, что Вы остаетесь с нами!</div>\n                            <div>С уважаением, команада Haries Network!</div>\n                        </div>\n                    </div>\n                </Wrapper>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Updates;","import React from 'react';\nimport '../../App.css';\n\nconst AuthMsg = ({ children }) => (\n    <div className='authorized-message'>\n        {children}\n    </div>\n)\n\nexport default AuthMsg;","import React, { useEffect, Fragment } from 'react';\nimport { HashRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './redux/store/store';\nimport ProfileContainer from './components/profile/ProfileContainer';\nimport Login from './components/login/Login';\nimport { setInitializingThunk } from './redux/reducers/appReducer/appReducer';\nimport { WithSuspense } from './components/hoc/withSuspense';\nimport Updates from \"./components/updates/Updates\";\nimport { setActualAuthCreator, setActualDeauthCreator } from './redux/reducers/authReducer/authReducer';\nimport AuthMsg from './components/hoc/AuthMsg';\n\nconst Users = React.lazy(() => import('./components/users/Users'));\n\nconst Project = () => {\n    const dispatch = useDispatch();\n    const initializing = useSelector(state => state.app.initializing);\n    const globalError = useSelector(state => state.app.globalError);\n    const count = useSelector(state => state.app.count);\n    const data = useSelector(state => state.auth.data);\n    const isActualAuth = useSelector(state => state.auth.isActualAuth);\n    const isActualDeauth = useSelector(state => state.auth.isActualDeauth);\n    \n    useEffect(() => {\n        dispatch(setInitializingThunk());\n    }, []);\n\n    let content = isActualAuth && <AuthMsg>Вы успешно вошли!</AuthMsg>\n\n    if (isActualDeauth) {\n        content = <AuthMsg>Вы успешно вышли!</AuthMsg>\n    }\n\n    if (isActualAuth || isActualDeauth) {\n        setTimeout(() => {\n            dispatch(setActualAuthCreator(false));\n            dispatch(setActualDeauthCreator(false));\n        }, 5000);\n    }\n\n    return (\n        <Fragment>\n            <div className='app-theme'>\n                <Header />\n                {globalError && (\n                    <div className='global-block'>\n                        <span className='global-error'>{globalError.toString()} ({count})</span>\n                    </div>\n                )}\n                {content}\n                {initializing\n                ? <Switch>\n                    <Redirect exact from='/' to='/profile' />\n                    <Route path='/login' component={Login} />\n                    <Route path='/updates' component={Updates} />\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                    <Route path='/users' render={WithSuspense(Users)} />\n                    <Route path='*' render={() => <div className='users-loader'>404: Not Found</div>} />\n                </Switch>\n                : <div className='users-loader'>INITIALIZING...</div>}\n            </div>\n        </Fragment>\n    )\n}\n\nconst App = () => (\n    <HashRouter>\n        <Provider store={store}>\n            <Project />\n        </Provider>\n    </HashRouter>\n)\n\nexport default App;","import React from 'react';\nimport '../../App.css';\n\nexport const WithSuspense = Component => () => (\n    <React.Suspense fallback={<div className='users-loader'>SUSPENSE LOADING...</div>}>\n        <Component />\n    </React.Suspense>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { getAuthThunk } from \"../authReducer/authReducer\";\n\nconst SET_INITIALIZING = 'my-app/appReducer/SET-INITIALIZING';\nconst SET_GLOBAL_ERROR = 'my-app/appReducer/SET-GLOBAL-ERROR';\nconst SET_COUNT = 'my-app/appReducer/SET-COUNT';\n\nconst initialState = {\n    initializing: false,\n    count: 95,\n    globalError: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZING: return { ...state, initializing: true };\n        case SET_COUNT: return { ...state, count: action.count };\n        case SET_GLOBAL_ERROR: return { ...state, globalError: action.err };\n        default: return state;\n    }\n}\n\nconst setInitializing = () => ({ type: SET_INITIALIZING });\nconst setGlobalErorr = err => ({ type: SET_GLOBAL_ERROR, err });\nconst setCount = count => ({ type: SET_COUNT, count });\n\nexport const setInitializingThunk = () => async dispatch => {\n    await dispatch(getAuthThunk());\n    dispatch(setInitializing());\n}\n\nexport const setGlobalErrorThunk = error => (dispatch, getState) => {\n    dispatch(setGlobalErorr(error));\n    let count = getState().app.count;\n    const int = setInterval(() => {\n        dispatch(setCount(count -= 1));\n        if (count === 0) {\n            dispatch(setGlobalErorr(null));\n            dispatch(setCount(5));\n            clearInterval(int);\n        }\n    }, 1000);\n}\n\nexport default appReducer;","import { usersAPI, followAPI } from \"../../../api/ajax\";\nimport { setGlobalErrorThunk } from \"../appReducer/appReducer\";\n\nconst GET_USERS = 'my-app/usersReducer/GET-USERS';\nconst POST_FOLLOW = 'my-app/usersReducer/POST-FOLLOW';\nconst DELETE_FOLLOW = 'my-app/usersReducer/DELETE-FOLLOW';\nconst SET_DISABLED = 'my-app/usersReducer/SET-DISABLED';\nconst SET_LOADER = 'my-app/usersReducer/SET-LOADER';\nconst GET_TOTAL_COUNT = 'my-app/usersReducer/GET-TOTAL-COUNT';\nconst SET_CURRENT_PAGE = 'my-app/usersReducer/SET-CURRENT-PAGE';\n\nconst initialState = {\n    users: [],\n    isDisabled: [5558],\n    isLoad: false,\n    currentPage: 2,\n    pageCount: 30,\n    totalCount: null\n}\n\nconst followLogic = (state, id, bolean) => ({\n    ...state, users: state.users.map(user => {\n        if (user.id === id) {\n            return { ...user, followed: bolean };\n        }\n        return user;\n    })\n})\n\nexport const followThunk = async (request, id, dispatch, actionCreator) => {\n    try {\n        dispatch(setDisabled(true, id));\n        const response = await request(id);\n        if (response.data.resultCode === 0) {\n            dispatch(actionCreator(id));\n        }\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    } finally {\n        dispatch(setDisabled(false, id));\n    }\n}\n\nconst handlers = {\n    [GET_USERS]: (state, { users }) => ({\n        ...state, users\n    }),\n    [POST_FOLLOW]: (state, { id }) => followLogic(state, id, true),\n    [DELETE_FOLLOW]: (state, { id }) => followLogic(state, id, false),\n    [SET_DISABLED]: (state, { bolean, userId }) => ({\n        ...state, isDisabled: bolean\n        ? [...state.isDisabled, userId]\n        : state.isDisabled.filter(id => id !== userId)\n    }),\n    [SET_LOADER]: (state, { isLoad }) => ({\n        ...state, isLoad\n    }),\n    [GET_TOTAL_COUNT]: (state, { totalCount }) => ({\n        ...state, totalCount\n    }),\n    [SET_CURRENT_PAGE]: (state, { currentPage }) => ({\n        ...state, currentPage\n    }),\n    DEFAULT: state => state\n}\n\nconst usersReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getUsersCreator = users => ({ type: GET_USERS, users });\nconst followCreator = id => ({ type: POST_FOLLOW, id });\nconst unfollowCreator = id => ({ type: DELETE_FOLLOW, id });\nconst setDisabled = (bolean, userId) => ({ type: SET_DISABLED, bolean, userId });\nconst setLoader = isLoad => ({ type: SET_LOADER, isLoad });\nconst getTotalCount = totalCount => ({ type: GET_TOTAL_COUNT, totalCount });\nconst setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\n\nexport const getUsersThunk = (page = 1, count = 30) => async (dispatch, getState) => {\n    try {\n        // const count = getState().usersPage.pageCount;\n        dispatch(setLoader(true));\n        const response = await usersAPI.getUsers(page, count);\n        dispatch(getUsersCreator(response.data.items));\n        dispatch(getTotalCount(response.data.totalCount));\n        dispatch(setCurrentPage(page));\n        dispatch(setLoader(false));\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    }\n}\n\nexport const follow = id => dispatch => {\n    followThunk(followAPI.postFollow, id, dispatch, followCreator);\n}\n\nexport const unfollow = id => dispatch => {\n    followThunk(followAPI.deleteFollow, id, dispatch, unfollowCreator);\n}\n\nexport default usersReducer;"],"sourceRoot":""}