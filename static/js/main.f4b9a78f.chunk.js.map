{"version":3,"sources":["api/ajax.js","redux/reducers/authReducer/authReducer.js","components/auth/Auth.jsx","components/header/Header.jsx","redux/reducers/profileReducer/profileReducer.js","redux/reduxForm/validators.js","redux/store/store.js","redux/reduxForm/formsControl.js","components/profile/ProfileDataForm.jsx","components/profile/ProfileStatus.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/login/Login.jsx","App.js","serviceWorker.js","index.js","redux/reducers/appReducer/appReducer.js","redux/reducers/usersReducer/usersReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","page","count","get","followAPI","postFollow","id","post","deleteFollow","delete","profileAPI","getProfile","putImage","img","formData","FormData","append","put","putProfile","obj","getStatus","putStatus","status","authAPI","getAuth","postAuth","email","password","rememberMe","captcha","deleteAuth","captchaAPI","getCaptcha","GET_AUTH","initialState","data","isAuth","handlers","state","getAuthCreator","login","type","getCaptchaCreator","getAuthThunk","dispatch","a","response","resultCode","postAuthThunk","request","url","stopSubmit","_error","messages","logoutMeThunk","authReducer","action","handler","DEFAULT","Auth","useDispatch","useState","active","setActive","useSelector","auth","loadData","useCallback","useEffect","className","onMouseOver","onClick","to","onMouseOut","activeClassName","Header","setNavBar","link","style","color","fontSize","Math","floor","random","maxLength","GET_PROFILE","PUT_IMAGE","GET_STATUS","profile","getStatusCreator","putImageCreator","getProfileThunk","profileReducer","photos","reducers","combineReducers","form","formReducer","usersPage","usersReducer","profilePage","app","appReducer","store","createStore","applyMiddleware","thunk","FormsControl","meta","touched","error","children","hasError","toString","Input","props","input","Textarea","createFiled","component","name","validate","placeholder","Field","reduxForm","handleSubmit","contacts","onSubmit","Object","keys","map","e","key","ProfileStatus","isOwner","putStatusThunk","editMode","setEditMode","value","setValue","onChange","target","onBlur","autoFocus","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","putImageThunk","putProfileThunk","fullName","userId","src","large","alt","files","length","then","initialValues","ProfileContainer","this","match","params","history","push","getStatusThunk","prop","componentDidMount","React","Component","compose","withRouter","connect","getState","Promise","reject","requireField","maxSymbols","Wrapper","title","bclass","content","LoginReduxForm","cn","href","Login","console","log","checkbox","Users","lazy","Project","initializing","globalError","setInitializingThunk","exact","from","path","render","Suspense","fallback","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_INITIALIZING","SET_GLOBAL_ERROR","SET_COUNT","setGlobalErorr","err","setCount","setGlobalErrorThunk","int","setInterval","clearInterval","GET_USERS","users","isDisabled","isLoad","currentPage","pageCount","totalCount","followLogic","bolean","user","followed","followThunk","actionCreator","setDisabled","filter","getUsersCreator","followCreator","unfollowCreator","setLoader","getTotalCount","setCurrentPage","getUsersThunk","items","follow","unfollow"],"mappings":"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","file":"static/js/main.f4b9a78f.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '11452ed1-3660-45e9-b8d1-a254f78a41b8'\n    }\n})\n\nexport const usersAPI = {\n    getUsers(page, count) {\n        return instance.get(`users?page=${page}&count=${count}`);\n    }\n}\n\nexport const followAPI = {\n    postFollow(id) {\n        return instance.post(`follow/${id}`);\n    },\n    deleteFollow(id) {\n        return instance.delete(`follow/${id}`);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`profile/${id}`);\n    },\n    putImage(img) {\n        const formData = new FormData();\n        formData.append('image', img);\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    putProfile(obj) {\n        return instance.put('profile', obj);\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`);\n    },\n    putStatus(status) {\n        return instance.put('profile/status', { status });\n    }\n}\n\nexport const authAPI = {\n    getAuth() {\n        return instance.get('auth/me');\n    },\n    postAuth(email, password, rememberMe, captcha) {\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\n    },\n    deleteAuth() {\n        return instance.delete('auth/login');\n    }\n}\n\nexport const captchaAPI = {\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    }\n}","import { authAPI, captchaAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_AUTH = 'my-app/authReducer/GET-AUTH';\nconst GET_CAPTCHA ='my-app/authReducer/GET-CAPTCHA';\n\nconst initialState = {\n    data: {\n        isAuth: false\n    },\n    captcha: null\n}\n\nconst handlers = {\n    [GET_AUTH]: (state, { data, isAuth }) => ({\n        ...state, data: { ...data, isAuth }\n    }),\n    [GET_CAPTCHA]: (state, { captcha }) => ({\n        ...state, captcha\n    }),\n    DEFAULT: state => state\n}\n\nconst authReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getAuthCreator = (id, login, email, isAuth) => ({ type: GET_AUTH, data: { id, login, email }, isAuth });\nconst getCaptchaCreator = captcha => ({ type: GET_CAPTCHA, captcha });\n\nexport const getAuthThunk = () => async dispatch => {\n    const response = await authAPI.getAuth();\n    if (response.data.resultCode === 0) {\n        const { id, login, email } = response.data.data;\n        dispatch(getAuthCreator(id, login, email, true));\n    }\n}\n\nexport const postAuthThunk = (email, password, rememberMe, captcha) => async dispatch => {\n    const response = await authAPI.postAuth(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthThunk());\n        dispatch(getCaptchaCreator(null));\n    } else {\n        if (response.data.resultCode === 10) {\n            const request = await captchaAPI.getCaptcha();\n            dispatch(getCaptchaCreator(request.data.url));\n        }\n        dispatch(stopSubmit('authpage', { _error: response.data.messages[0] }));\n    }\n}\n\nexport const logoutMeThunk = () => async dispatch => {\n    const response = await authAPI.deleteAuth();\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthCreator(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getAuthThunk, logoutMeThunk } from '../../redux/reducers/authReducer/authReducer';\nimport '../../App.css';\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const [active, setActive] = useState(false);\n    const data = useSelector(state => state.auth.data);\n\n    const loadData = useCallback(() => dispatch(getAuthThunk()), [getAuthThunk]);\n    \n    useEffect(() => {\n        loadData();\n    }, []);\n\n    const closeForm = () => {\n        if (active) {\n            setActive(false);\n        }\n    }\n\n    const logoutForm = () => {\n        setActive(false);\n        dispatch(logoutMeThunk());\n    }\n    return (\n        <Fragment>{\n            data.isAuth\n            ? <div className='logout_block'>\n                <Link onMouseOver={() => setActive(true)} onClick={closeForm} className='auth-user' to='/profile'>{data.login}</Link>\n                {active && <span\n                    onMouseOut={() => setActive(false)}\n                    className='logout'\n                    onClick={logoutForm}>\n                        Log Out\n                    </span>}\n            </div>\n            : <NavLink className='auth-login' activeClassName='auth-login-active' to='/login'>LOGIN</NavLink>\n        }</Fragment>\n    )\n}\n\nexport default Auth;","import React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../../App';\nimport Auth from '../auth/Auth';\n\nconst Header = () => {\n    const setNavBar = (url, link) => {\n        return (\n            <div>\n                <NavLink className='route' to={url}>\n                    {link}\n                </NavLink>\n            </div>\n        )\n    }\n\n    return (\n        <Fragment>\n            <div className='header'>\n                <div className='title'>\n                    <span>Haries Network</span>\n                </div>\n                <span style={{ color: 'white', fontSize: 20 }}>|</span>\n                {setNavBar(`/${Math.floor(Math.random()*999)}`, 'HIDE ALL')}\n                {setNavBar('/profile', 'PROFILE')}\n                {setNavBar('/users', 'USERS')}\n                <Auth />\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Header;","import { profileAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_PROFILE = 'my-app/profileReducer/GET-PROFILE';\nconst PUT_IMAGE = 'my-app/profileReducer/PUT-IMAGE';\nconst GET_STATUS = 'my-app/profileReducer/GET-STATUS';\n\nconst initialState = {\n    profile: null,\n    status: null\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROFILE:\n        case GET_STATUS: return { ...state, ...action.data };\n        case PUT_IMAGE: return { ...state, profile: { ...state.profile, photos: action.img } };\n        default: return state;\n    }\n}\n\nconst getProfileCreator = profile => ({ type: GET_PROFILE, data: { profile } });\nconst getStatusCreator = status => ({ type: GET_STATUS, data: { status } })\nconst putImageCreator = img => ({ type: PUT_IMAGE, img });\n\nexport const getProfileThunk = id => async dispatch => {\n    const response = await profileAPI.getProfile(id);\n    dispatch(getProfileCreator(response.data));\n}\n\nexport const putImageThunk = img => async dispatch => {\n    const response = await profileAPI.putImage(img);\n    if (response.data.resultCode === 0) {\n        dispatch(putImageCreator(response.data.data.photos));\n    }\n}\n\nexport const putProfileThunk = obj => async (dispatch, getState) => {\n    const id = getState().auth.data.id;\n    const response = await profileAPI.putProfile(obj);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfileThunk(id));\n    } else {\n        dispatch(stopSubmit('profilepage', { _error: response.data.messages[0] }));\n        return Promise.reject();\n    }\n}\n\nexport const getStatusThunk = id => async dispatch => {\n    const response = await profileAPI.getStatus(id);\n    dispatch(getStatusCreator(response.data));\n}\n\nexport const putStatusThunk = status => async dispatch => {\n    const response = await profileAPI.putStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(getStatusCreator(status));\n    }\n}\n\nexport default profileReducer;","export const requireField = value => {\n    if (!value) return 'Field is require!';\n}\n\nexport const maxLength = maxLength => value => {\n    if (value.length > maxLength) return `Max legnth is ${maxLength} symbols!`;\n}","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport usersReducer from '../reducers/usersReducer/usersReducer';\nimport profileReducer from '../reducers/profileReducer/profileReducer';\nimport authReducer from '../reducers/authReducer/authReducer';\nimport appReducer from '../reducers/appReducer/appReducer';\n\nconst reducers = combineReducers({\n    form: formReducer,\n    usersPage: usersReducer,\n    profilePage: profileReducer,\n    auth: authReducer,\n    app: appReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { Field } from 'redux-form';\nimport '../../App.css';\n\nconst FormsControl = ({ meta: { touched, error }, children }) => {\n    const hasError = touched && error;\n    return (\n        <>\n            {children}\n            {hasError && <div className='warning_field'>\n                <b>{error.toString()}</b>\n            </div>}\n        </>\n    )\n}\n\nexport const Input = props => (\n    <FormsControl { ...props }><input { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const Textarea = props => (\n    <FormsControl { ...props }><textarea { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const createFiled = (component, name, validate, type, className, placeholder) => (\n    <Field\n        className={className}\n        component={component}\n        name={name}\n        validate={validate}\n        type={type}\n        placeholder={placeholder}\n    />\n)","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createFiled, Input, Textarea } from '../../redux/reduxForm/formsControl';\nimport '../../App.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile: { contacts }, error }) => (\n    <form onSubmit={handleSubmit}>\n        {error && <h2>{error}</h2>}\n        <div className='profile-form'>\n            <div><b>ABOUT ME:</b> <div className='edit-button'>\n                <button>SAVE</button>\n            </div> <div>{createFiled(Textarea, 'aboutMe', [])}</div></div>\n            <div><b>SEARCH JOB:</b> {createFiled(Input, 'lookingForAJob', [], 'checkbox')}</div>\n            <div><b>MY SKILLS:</b> <div>{createFiled(Textarea, 'lookingForAJobDescription', [])}</div></div>\n        </div>\n        <div>\n            <hr color='white' />\n            <b>SOCIAL NETWORKS</b>\n            <hr color='white' />\n        </div>\n        <div>{\n            Object.keys(contacts).map(e => (\n                <div className='profile-field' key={e}>\n                    <b className='profile-networks'>{e}:</b> \n                    <span>\n                        {createFiled(Input, `contacts.${e}`, [])}\n                    </span>\n                </div>\n            ))\n        }</div>\n    </form>\n);\n\nexport default reduxForm({ form: 'profilepage' })(ProfileDataForm);","import React, { Fragment, useState, useEffect } from 'react';\n\nconst ProfileStatus = ({ status, isOwner, putStatusThunk }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(status);\n\n    useEffect(() => {\n        setValue(status);\n    }, [status]);\n\n    const activateEditMode = () => {\n        if (isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        putStatusThunk(value);\n    }\n\n    const changeStatus = e => {\n        setValue(e.target.value);\n    }\n    return (\n        <Fragment>{\n            editMode\n            ? <input onChange={changeStatus} onBlur={deactivateEditMode} value={value} maxLength={19} autoFocus={true} />\n            : <span onClick={activateEditMode}>{value || '----'}</span>\n        }</Fragment>\n    )\n}\n\nexport default ProfileStatus;","import React, { useState, Fragment } from 'react';\nimport '../../App.css';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileStatus from './ProfileStatus';\n\nconst Profile = ({ profile, isOwner, putImageThunk, putProfileThunk, status, ...props }) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <div className='users-loader'></div>\n    }\n\n    const changeImage = e => {\n        if (e.target.files.length) {\n            putImageThunk(e.target.files[0]);\n        }\n    }\n\n    const saveProfile = e => {\n        putProfileThunk(e)\n        .then(() => setEditMode(false));\n    }\n\n    const userImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/User_icon_2.svg/220px-User_icon_2.svg.png';\n    return (\n        <Fragment>\n            <div className='profile-page'>\n                <div className='profile-oneblock'>\n                    <div className='profile-info'>{profile.fullName} | {profile.userId}</div>\n                    <div><img className='profile-img' src={profile.photos.large || userImage} alt='' /></div>\n                    {isOwner && <input type='file' onChange={changeImage} />}\n                    <div className='profile-status'>STATUS: <ProfileStatus status={status} isOwner={isOwner} { ...props } /></div>\n                </div>\n                <div className='profile-twoblock'>\n                    {!editMode\n                    ? <ProfileData onClick={() => setEditMode(true)} isOwner={isOwner} profile={profile} />\n                    : <ProfileDataForm onSubmit={saveProfile} initialValues={profile} profile={profile} />}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst ProfileData = ({ isOwner, onClick, profile: { contacts, aboutMe, lookingForAJob, lookingForAJobDescription } }) => {\n    return (\n        <Fragment>\n            {isOwner && <div className='edit-button'>\n                <button onClick={onClick}>EDIT</button>\n            </div>}\n            <div><b>ABOUT ME:</b> {aboutMe && aboutMe.toString()}</div>\n            <div><b>SEARCH JOB:</b> {lookingForAJob ? 'YES' : 'NO'}</div>\n            <div><b>MY SKILLS:</b> {lookingForAJobDescription && lookingForAJobDescription.toString()}</div>\n            <div>\n                <hr color='white' />\n                <b>SOCIAL NETWORKS</b>\n                <hr color='white' />\n            </div>\n            <div>{\n                Object.keys(contacts).map(e => (\n                    <div key={e}>{contacts[e] && <><b className='profile-networks'>{e}:</b> {contacts[e]}</>}</div>\n                ))\n            }</div>\n        </Fragment>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfileThunk, putImageThunk, putProfileThunk, getStatusThunk, putStatusThunk } from '../../redux/reducers/profileReducer/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let id = this.props.match.params.userId;\n        if (!id) {\n            id = this.props.data.id;\n            if (!id) {\n                this.props.history.push('/login');\n            }\n        }\n        if (this.props.data.isAuth || this.props.match.params.userId) {\n            this.props.getProfileThunk(id);\n            this.props.getStatusThunk(id);\n        }\n    }\n    \n    componentDidUpdate(prop) {\n        if (prop.match.params.userId !== this.props.match.params.userId ||\n            prop.data.isAuth !== this.props.data.isAuth) {\n            this.componentDidMount();\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId} { ...this.props } />\n    }\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    data: state.auth.data\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n    getProfileThunk,\n    putImageThunk,\n    putProfileThunk,\n    getStatusThunk,\n    putStatusThunk\n}))(ProfileContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport cn from 'classnames';\nimport { createFiled, Input } from '../../redux/reduxForm/formsControl';\nimport { requireField, maxLength } from '../../redux/reduxForm/validators';\nimport { postAuthThunk } from '../../redux/reducers/authReducer/authReducer';\n\nconst maxSymbols = maxLength(16);\n\nconst Wrapper = ({ title, children, bclass }) => {\n    const content = <b className={bclass}>{title}</b>\n    return (\n        <div>\n            <label>\n                {!bclass && content}\n                <div className='input-block'>\n                    {bclass && content}\n                    {children}\n                </div>\n            </label>\n        </div>\n    )\n}\n\nconst LoginFields = ({ handleSubmit, error, captcha }) => (\n    <form onSubmit={handleSubmit} className={cn('profile-page', 'auth-page')}>\n        <div className='auth-card'>\n            <h2>LOGIN</h2>\n            <Wrapper title='EMAIL'>\n                {createFiled(Input, 'email', [requireField, maxSymbols], 'text', 'input', 'Enter email')}\n            </Wrapper>\n            <Wrapper title='PASSWORD'>\n                {createFiled(Input, 'password', [requireField, maxSymbols], 'password', 'input', 'Enter password')}\n            </Wrapper>\n            <Wrapper title='Remember me' bclass='remember'>\n                {createFiled(Input, 'checkbox', [requireField], 'checkbox')}\n            </Wrapper>\n            {error && <div className='error_message'>{error}</div>}\n            {captcha && <div className='captcha-wrapper'>\n                <div><img src={captcha} alt='' /></div>\n                {createFiled(Input, 'captcha', [requireField])}\n            </div>}\n            <button className='form-button'>Login</button>\n            <a href='https://social-network.samuraijs.com/signUp' target='_blank' className='form-button'>\n                Create account?\n            </a>\n        </div>\n    </form>\n)\n\nconst LoginReduxForm = reduxForm({ form: 'authpage' })(LoginFields);\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => state.auth.data);\n    const captcha = useSelector(state => state.auth.captcha);\n\n    function data(e) {\n        console.log(e);\n        dispatch(postAuthThunk(e.email, e.password, e.checkbox, e.captcha));\n    }\n    \n    if (auth.isAuth) {\n        return <Redirect to='/profile' />\n    }\n    return <LoginReduxForm onSubmit={data} captcha={captcha} />\n}\n\nexport default Login;","import React, { useEffect, Fragment } from 'react';\nimport { HashRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './redux/store/store';\nimport ProfileContainer from './components/profile/ProfileContainer';\nimport Login from './components/login/Login';\nimport { setInitializingThunk } from './redux/reducers/appReducer/appReducer';\n\nconst Users = React.lazy(() => import('./components/users/Users'));\n\nconst Project = () => {\n    const dispatch = useDispatch();\n    const initializing = useSelector(state => state.app.initializing);\n    const globalError = useSelector(state => state.app.globalError);\n    const count = useSelector(state => state.app.count);\n\n    useEffect(() => {\n        dispatch(setInitializingThunk());\n    }, []);\n\n    return (\n        <Fragment>\n            <Header />\n            {globalError && <div className='global-error'>\n                {globalError.toString()} ({count})\n            </div>}\n            {initializing\n            ? <Switch>\n                <Redirect exact from='/' to='/profile' />\n                <Route path='/login' component={Login} />\n                <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                <Route path='/users' render={() => <React.Suspense fallback={<div className='users-loader'>SUSPENSE LOADING...</div>}><Users /></React.Suspense>} />\n                <Route path='*' render={() => <div className='users-loader'>404: Not Found</div>} />\n            </Switch>\n            : <div className='users-loader'>INITIALIZING...</div>}\n        </Fragment>\n    )\n}\n\nconst App = () => (\n    <HashRouter>\n        <Provider store={store}>\n            <Project />\n        </Provider>\n    </HashRouter>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { getAuthThunk } from \"../authReducer/authReducer\";\n\nconst SET_INITIALIZING = 'my-app/appReducer/SET-INITIALIZING';\nconst SET_GLOBAL_ERROR = 'my-app/appReducer/SET-GLOBAL-ERROR';\nconst SET_COUNT = 'my-app/appReducer/SET-COUNT';\n\nconst initialState = {\n    initializing: false,\n    count: 5,\n    globalError: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZING: return { ...state, initializing: true };\n        case SET_COUNT: return { ...state, count: action.count };\n        case SET_GLOBAL_ERROR: return { ...state, globalError: action.err };\n        default: return state;\n    }\n}\n\nconst setInitializing = () => ({ type: SET_INITIALIZING });\nconst setGlobalErorr = err => ({ type: SET_GLOBAL_ERROR, err });\nconst setCount = count => ({ type: SET_COUNT, count });\n\nexport const setInitializingThunk = () => async dispatch => {\n    await dispatch(getAuthThunk());\n    dispatch(setInitializing());\n}\n\nexport const setGlobalErrorThunk = error => (dispatch, getState) => {\n    dispatch(setGlobalErorr(error));\n    let count = getState().app.count;\n    const int = setInterval(() => {\n        dispatch(setCount(count -= 1));\n        if (count === 0) {\n            dispatch(setGlobalErorr(null));\n            dispatch(setCount(5));\n            clearInterval(int);\n        }\n    }, 1000);\n}\n\nexport default appReducer;","import { usersAPI, followAPI } from \"../../../api/ajax\";\nimport { setGlobalErrorThunk } from \"../appReducer/appReducer\";\n\nconst GET_USERS = 'my-app/usersReducer/GET-USERS';\nconst POST_FOLLOW = 'my-app/usersReducer/POST-FOLLOW';\nconst DELETE_FOLLOW = 'my-app/usersReducer/DELETE-FOLLOW';\nconst SET_DISABLED = 'my-app/usersReducer/SET-DISABLED';\nconst SET_LOADER = 'my-app/usersReducer/SET-LOADER';\nconst GET_TOTAL_COUNT = 'my-app/usersReducer/GET-TOTAL-COUNT';\nconst SET_CURRENT_PAGE = 'my-app/usersReducer/SET-CURRENT-PAGE';\n\nconst initialState = {\n    users: [],\n    isDisabled: [5558],\n    isLoad: false,\n    currentPage: 2,\n    pageCount: 30,\n    totalCount: null\n}\n\nconst followLogic = (state, id, bolean) => ({\n    ...state, users: state.users.map(user => {\n        if (user.id === id) {\n            return { ...user, followed: bolean };\n        }\n        return user;\n    })\n})\n\nexport const followThunk = async (request, id, dispatch, actionCreator) => {\n    try {\n        dispatch(setDisabled(true, id));\n        const response = await request(id);\n        if (response.data.resultCode === 0) {\n            dispatch(actionCreator(id));\n        }\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    } finally {\n        dispatch(setDisabled(false, id));\n    }\n}\n\nconst handlers = {\n    [GET_USERS]: (state, { users }) => ({\n        ...state, users\n    }),\n    [POST_FOLLOW]: (state, { id }) => followLogic(state, id, true),\n    [DELETE_FOLLOW]: (state, { id }) => followLogic(state, id, false),\n    [SET_DISABLED]: (state, { bolean, userId }) => ({\n        ...state, isDisabled: bolean\n        ? [...state.isDisabled, userId]\n        : state.isDisabled.filter(id => id !== userId)\n    }),\n    [SET_LOADER]: (state, { isLoad }) => ({\n        ...state, isLoad\n    }),\n    [GET_TOTAL_COUNT]: (state, { totalCount }) => ({\n        ...state, totalCount\n    }),\n    [SET_CURRENT_PAGE]: (state, { currentPage }) => ({\n        ...state, currentPage\n    }),\n    DEFAULT: state => state\n}\n\nconst usersReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getUsersCreator = users => ({ type: GET_USERS, users });\nconst followCreator = id => ({ type: POST_FOLLOW, id });\nconst unfollowCreator = id => ({ type: DELETE_FOLLOW, id });\nconst setDisabled = (bolean, userId) => ({ type: SET_DISABLED, bolean, userId });\nconst setLoader = isLoad => ({ type: SET_LOADER, isLoad });\nconst getTotalCount = totalCount => ({ type: GET_TOTAL_COUNT, totalCount });\nconst setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\n\nexport const getUsersThunk = (page = 1) => async (dispatch, getState) => {\n    try {\n        const count = getState().usersPage.pageCount;\n        dispatch(setLoader(true));\n        const response = await usersAPI.getUsers(page, count);\n        dispatch(getUsersCreator(response.data.items));\n        dispatch(getTotalCount(response.data.totalCount));\n        dispatch(setCurrentPage(page));\n        dispatch(setLoader(false));\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    }\n}\n\nexport const follow = id => dispatch => {\n    followThunk(followAPI.postFollow, id, dispatch, followCreator);\n}\n\nexport const unfollow = id => dispatch => {\n    followThunk(followAPI.deleteFollow, id, dispatch, unfollowCreator);\n}\n\nexport default usersReducer;"],"sourceRoot":""}