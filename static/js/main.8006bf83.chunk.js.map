{"version":3,"sources":["components/hoc/ShowOnlineStatus.jsx","api/ajax.js","redux/reducers/authReducer/authReducer.js","redux/reducers/profileReducer/profileReducer.js","objects-helper/patterns.js","redux/reducers/usersReducer/usersReducer.js","components/auth/authSelectors.js","redux/reducers/themeReducer/themeReducer.js","redux/reduxForm/validators.js","components/hoc/WithSetOffline.js","components/auth/Auth.jsx","components/theme/Theme.jsx","components/header/Header.jsx","redux/store/store.js","redux/reduxForm/formsControl.js","components/profile/ProfileDataForm.jsx","components/profile/ProfileStatus.jsx","components/hoc/Wrapper.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx","components/login/Login.jsx","components/updates/Updates.jsx","components/hoc/AuthMsg.jsx","App.js","components/hoc/WithSetOnline.js","components/hoc/withSuspense.jsx","serviceWorker.js","index.js","components/users/usersSelectors.js","redux/reducers/appReducer/appReducer.js","components/theme/themeSelectors.js","components/profile/profileSelectors.js"],"names":["ShowOnlineStatus","data","useSelector","state","getUsersIsOnline","some","code","className","instance","axios","withCredentials","baseURL","headers","apiURL","usersAPI","getUsers","page","count","get","followAPI","postFollow","id","post","deleteFollow","delete","profileAPI","getProfile","putImage","img","formData","FormData","append","put","putProfile","obj","getStatus","putStatus","status","authAPI","getAuth","postAuth","email","password","rememberMe","captcha","deleteAuth","captchaAPI","getCaptcha","adminAPI","getAdmin","addAdmin","removeAdmin","getTechAdmin","onlineAPI","getOnline","setOnline","setOffline","GET_AUTH","initialState","isAuth","isActualAuth","isActualDeauth","handlers","bol","getAuthCreator","login","type","getCaptchaCreator","setActualAuthCreator","setActualDeauthCreator","getAuthThunk","dispatch","a","response","resultCode","postAuthThunk","request","url","stopSubmit","_error","messages","logoutMeThunk","authReducer","action","handler","DEFAULT","GET_PROFILE","PUT_IMAGE","GET_STATUS","GET_ADMIN","GET_TECH_ADMIN","profile","isTechAdmin","isAdmin","getStatusCreator","putImageCreator","getAdminCreator","getTechAdminCreator","getProfileThunk","putImageThunk","photos","putProfileThunk","getState","auth","Promise","reject","getStatusThunk","putStatusThunk","adminData","actionCreator","Object","keys","map","e","getAdminThunk","getTechAdminThunk","addAdminThunk","removeAdminThunk","profileReducer","followLogic","bolean","users","user","followed","followThunk","setDisabled","setGlobalErrorThunk","GET_USERS","isDisabled","isLoad","currentPage","pageCount","totalCount","isOnline","userId","filter","getUsersCreator","followCreator","unfollowCreator","setLoader","getTotalCount","setCurrentPage","getUsersThunk","items","follow","unfollow","getOnlineStatusThunk","setOnlineStatusThunk","setOfflineStatusThunk","usersReducer","getAuthData","getAuthCaptcha","maxLength","SET_COLOR","color","localStorage","getItem","setThemeColorCreator","themeReducer","WithSetOffline","find","Auth","useDispatch","useState","active","setActive","getThemeColor","loadData","useCallback","useEffect","onMouseOver","onClick","to","onMouseOut","setItem","style","backgroundColor","activeClassName","Button","children","target","innerHTML","innerText","Theme","theme","Header","setNavBar","link","src","width","alt","reducers","combineReducers","form","formReducer","usersPage","profilePage","app","appReducer","store","createStore","applyMiddleware","thunk","FormsControl","meta","touched","error","hasError","toString","Input","props","input","Textarea","createFiled","component","name","validate","placeholder","Field","reduxForm","handleSubmit","contacts","onSubmit","key","ProfileStatus","isOwner","editMode","setEditMode","value","setValue","onChange","onBlur","autoFocus","Wrapper","ProfileData","aboutMe","lookingForAJob","lookingForAJobDescription","Profile","getUsersData","loadUsers","userImage","fullName","large","files","length","then","initialValues","ProfileContainer","this","match","params","history","push","prop","componentDidMount","React","Component","compose","withRouter","connect","getProfileData","getProfileStatus","getProfileIsAdmin","getProfileIsTechAdmin","requireField","maxSymbols","title","bclass","content","LoginReduxForm","cn","href","Login","checkbox","Updates","upd","AuthMsg","Users","lazy","Project","initializing","globalError","setInitializingThunk","WithSetOnline","window","onunload","setTimeout","exact","from","path","render","Suspense","fallback","App","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createSelector","getUsersIsDisabled","getUsersIsLoad","getUsersTotalCount","getUsersCurrentPage","SET_INITIALIZING","SET_GLOBAL_ERROR","SET_COUNT","setGlobalErorr","err","setCount","int","setInterval","clearInterval"],"mappings":"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","file":"static/js/main.8006bf83.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { getUsersIsOnline } from '../users/usersSelectors';\n\nexport const ShowOnlineStatus = ({ data }) => {\n    const isOnline = useSelector(state => getUsersIsOnline(state));\n    \n    return (\n        isOnline.some(({ code }) => code === data)\n        ? <div className='online-block'>Online</div>\n        : <div className='offline-block'>Offline</div>\n    );\n}","import * as axios from 'axios';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': '11452ed1-3660-45e9-b8d1-a254f78a41b8'\n    }\n})\n\nconst apiURL = 'https://haries-network.firebaseio.com';\n\nexport const usersAPI = {\n    getUsers(page, count) {\n        return instance.get(`users?page=${page}&count=${count}`);\n    }\n}\n\nexport const followAPI = {\n    postFollow(id) {\n        return instance.post(`follow/${id}`);\n    },\n    deleteFollow(id) {\n        return instance.delete(`follow/${id}`);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(id) {\n        return instance.get(`profile/${id}`);\n    },\n    putImage(img) {\n        const formData = new FormData();\n        formData.append('image', img);\n        return instance.put('profile/photo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    putProfile(obj) {\n        return instance.put('profile', obj);\n    },\n    getStatus(id) {\n        return instance.get(`profile/status/${id}`);\n    },\n    putStatus(status) {\n        return instance.put('profile/status', { status });\n    }\n}\n\nexport const authAPI = {\n    getAuth() {\n        return instance.get('auth/me');\n    },\n    postAuth(email, password, rememberMe, captcha) {\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\n    },\n    deleteAuth() {\n        return instance.delete('auth/login');\n    }\n}\n\nexport const captchaAPI = {\n    getCaptcha() {\n        return instance.get('security/get-captcha-url');\n    }\n}\n\nexport const adminAPI = {\n    getAdmin() {\n        return axios.get(`${apiURL}/isadmin.json`);\n    },\n    addAdmin(id) {\n        return axios.post(`${apiURL}/isadmin.json`, id);\n    },\n    removeAdmin(id) {\n        return axios.delete(`${apiURL}/isadmin/${id}.json`);\n    },\n    getTechAdmin() {\n        return axios.get(`${apiURL}/istechadmin.json`);\n    }\n}\n\nexport const onlineAPI = {\n    getOnline() {\n        return axios.get(`${apiURL}/isonline.json`);\n    },\n    setOnline(id) {\n        return axios.post(`${apiURL}/isonline.json`, id);\n    },\n    setOffline(id) {\n        return axios.delete(`${apiURL}/isonline/${id}.json`);\n    }\n}","import { authAPI, captchaAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_AUTH = 'my-app/authReducer/GET-AUTH';\nconst GET_CAPTCHA ='my-app/authReducer/GET-CAPTCHA';\nconst SET_ACTUAL_AUTH = 'my-app/authReducer/SET-ACTUAL-AUTH';\nconst SET_ACTUAL_DEAUTH = 'my-app/authReducer/SET-ACTUAL-DEAUTH';\n\nconst initialState = {\n    data: {\n        isAuth: false\n    },\n    captcha: null,\n    isActualAuth: false,\n    isActualDeauth: false\n}\n\nconst handlers = {\n    [GET_AUTH]: (state, { data, isAuth }) => ({\n        ...state, data: { ...data, isAuth }\n    }),\n    [GET_CAPTCHA]: (state, { captcha }) => ({\n        ...state, captcha\n    }),\n    [SET_ACTUAL_AUTH]: (state, { bol }) => ({\n        ...state, isActualAuth: bol\n    }),\n    [SET_ACTUAL_DEAUTH]: (state, { bol }) => ({\n        ...state, isActualDeauth: bol\n    }),\n    DEFAULT: state => state\n}\n\nconst authReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getAuthCreator = (id, login, email, isAuth) => ({ type: GET_AUTH, data: { id, login, email }, isAuth });\nconst getCaptchaCreator = captcha => ({ type: GET_CAPTCHA, captcha });\nexport const setActualAuthCreator = bol => ({ type: SET_ACTUAL_AUTH, bol });\nexport const setActualDeauthCreator = bol => ({ type: SET_ACTUAL_DEAUTH, bol });\n\nexport const getAuthThunk = () => async dispatch => {\n    const response = await authAPI.getAuth();\n    if (response.data.resultCode === 0) {\n        const { id, login, email } = response.data.data;\n        dispatch(getAuthCreator(id, login, email, true));\n    }\n}\n\nexport const postAuthThunk = (email, password, rememberMe, captcha) => async dispatch => {\n    const response = await authAPI.postAuth(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthThunk());\n        dispatch(getCaptchaCreator(null));\n        dispatch(setActualAuthCreator(true));\n    } else {\n        if (response.data.resultCode === 10) {\n            const request = await captchaAPI.getCaptcha();\n            dispatch(getCaptchaCreator(request.data.url));\n        }\n        dispatch(stopSubmit('authpage', { _error: response.data.messages[0] }));\n    }\n}\n\nexport const logoutMeThunk = () => async dispatch => {\n    const response = await authAPI.deleteAuth();\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthCreator(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import { profileAPI, adminAPI } from \"../../../api/ajax\";\nimport { stopSubmit } from \"redux-form\";\n\nconst GET_PROFILE = 'my-app/profileReducer/GET-PROFILE';\nconst PUT_IMAGE = 'my-app/profileReducer/PUT-IMAGE';\nconst GET_STATUS = 'my-app/profileReducer/GET-STATUS';\nconst GET_ADMIN = 'my-app/profileReducer/GET_ADMIN';\nconst GET_TECH_ADMIN = 'my-app/profileReducer/GET-TECH-ADMIN';\n\nconst initialState = {\n    profile: null,\n    status: null,\n    isTechAdmin: [],\n    isAdmin: []\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROFILE:\n        case GET_STATUS: return { ...state, ...action.data };\n        case PUT_IMAGE: return { ...state, profile: { ...state.profile, photos: action.img } };\n        case GET_ADMIN: return { ...state, isAdmin: action.isAdmin };\n        case GET_TECH_ADMIN: return { ...state, isTechAdmin: action.isTechAdmin };\n        default: return state;\n    }\n}\n\nconst getProfileCreator = profile => ({ type: GET_PROFILE, data: { profile } });\nconst getStatusCreator = status => ({ type: GET_STATUS, data: { status } });\nconst putImageCreator = img => ({ type: PUT_IMAGE, img });\nconst getAdminCreator = isAdmin => ({ type: GET_ADMIN, isAdmin });\nconst getTechAdminCreator = isTechAdmin => ({ type: GET_TECH_ADMIN, isTechAdmin });\n\nexport const getProfileThunk = id => async dispatch => {\n    const response = await profileAPI.getProfile(id);\n    dispatch(getProfileCreator(response.data));\n}\n\nexport const putImageThunk = img => async dispatch => {\n    const response = await profileAPI.putImage(img);\n    if (response.data.resultCode === 0) {\n        dispatch(putImageCreator(response.data.data.photos));\n    }\n}\n\nexport const putProfileThunk = obj => async (dispatch, getState) => {\n    const id = getState().auth.data.id;\n    const response = await profileAPI.putProfile(obj);\n    if (response.data.resultCode === 0) {\n        dispatch(getProfileThunk(id));\n    } else {\n        dispatch(stopSubmit('profilepage', { _error: response.data.messages[0] }));\n        return Promise.reject();\n    }\n}\n\nexport const getStatusThunk = id => async dispatch => {\n    const response = await profileAPI.getStatus(id);\n    dispatch(getStatusCreator(response.data));\n}\n\nexport const putStatusThunk = status => async dispatch => {\n    const response = await profileAPI.putStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(getStatusCreator(status));\n    }\n}\n\nasync function adminData(request, dispatch, actionCreator) {\n    const response = await request();\n    const data = Object.keys(response.data).map(e => ({ code: response.data[e], id: e }));\n    if (data) {\n        dispatch(actionCreator(data));\n    }\n}\n\nexport const getAdminThunk = () => dispatch => {\n    adminData(adminAPI.getAdmin, dispatch, getAdminCreator);\n}\n\nexport const getTechAdminThunk = () => dispatch => {\n    adminData(adminAPI.getTechAdmin, dispatch, getTechAdminCreator);\n}\n\nexport const addAdminThunk = id => async dispatch => {\n    await adminAPI.addAdmin(id);\n    dispatch(getAdminThunk());\n}\n\nexport const removeAdminThunk = id => async dispatch => {\n    await adminAPI.removeAdmin(id);\n    dispatch(getAdminThunk());\n}\n\nexport default profileReducer;","export const followLogic = (state, id, bolean) => ({\n    ...state, users: state.users.map(user => {\n        if (user.id === id) {\n            return { ...user, followed: bolean };\n        }\n        return user;\n    })\n})\n\nexport const followThunk = async (request, id, dispatch, actionCreator, setDisabled, setGlobalErrorThunk) => {\n    try {\n        dispatch(setDisabled(true, id));\n        const response = await request(id);\n        if (response.data.resultCode === 0) {\n            dispatch(actionCreator(id));\n        }\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    } finally {\n        dispatch(setDisabled(false, id));\n    }\n}","import { usersAPI, followAPI, onlineAPI } from \"../../../api/ajax\";\nimport { setGlobalErrorThunk } from \"../appReducer/appReducer\";\nimport { followThunk, followLogic } from '../../../objects-helper/patterns';\n\nconst GET_USERS = 'my-app/usersReducer/GET-USERS';\nconst POST_FOLLOW = 'my-app/usersReducer/POST-FOLLOW';\nconst DELETE_FOLLOW = 'my-app/usersReducer/DELETE-FOLLOW';\nconst SET_DISABLED = 'my-app/usersReducer/SET-DISABLED';\nconst SET_LOADER = 'my-app/usersReducer/SET-LOADER';\nconst GET_TOTAL_COUNT = 'my-app/usersReducer/GET-TOTAL-COUNT';\nconst SET_CURRENT_PAGE = 'my-app/usersReducer/SET-CURRENT-PAGE';\nconst GET_ONLINE_STATUS = 'my-app/usersReducer/GET-ONLINE-STATUS';\n\nconst initialState = {\n    users: [],\n    isDisabled: [],\n    isLoad: false,\n    currentPage: 2,\n    pageCount: 30,\n    totalCount: null,\n    isOnline: []\n}\n\nconst handlers = {\n    [GET_USERS]: (state, { users }) => ({\n        ...state, users\n    }),\n    [POST_FOLLOW]: (state, { id }) => followLogic(state, id, true),\n    [DELETE_FOLLOW]: (state, { id }) => followLogic(state, id, false),\n    [SET_DISABLED]: (state, { bolean, userId }) => ({\n        ...state, isDisabled: bolean\n        ? [...state.isDisabled, userId]\n        : state.isDisabled.filter(id => id !== userId)\n    }),\n    [SET_LOADER]: (state, { isLoad }) => ({\n        ...state, isLoad\n    }),\n    [GET_TOTAL_COUNT]: (state, { totalCount }) => ({\n        ...state, totalCount\n    }),\n    [SET_CURRENT_PAGE]: (state, { currentPage }) => ({\n        ...state, currentPage\n    }),\n    [GET_ONLINE_STATUS]: (state, { isOnline }) => ({\n        ...state, isOnline\n    }),\n    DEFAULT: state => state\n}\n\nconst usersReducer = (state = initialState, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n\nconst getUsersCreator = users => ({ type: GET_USERS, users });\nconst followCreator = id => ({ type: POST_FOLLOW, id });\nconst unfollowCreator = id => ({ type: DELETE_FOLLOW, id });\nconst setDisabled = (bolean, userId) => ({ type: SET_DISABLED, bolean, userId });\nconst setLoader = isLoad => ({ type: SET_LOADER, isLoad });\nconst getTotalCount = totalCount => ({ type: GET_TOTAL_COUNT, totalCount });\nconst setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\nconst getOnlineStatusCreator = isOnline => ({ type: GET_ONLINE_STATUS, isOnline });\n\nexport const getUsersThunk = (page = 1, count = 30) => async dispatch => {\n    try {\n        dispatch(setLoader(true));\n        const response = await usersAPI.getUsers(page, count);\n        dispatch(getUsersCreator(response.data.items));\n        dispatch(getTotalCount(response.data.totalCount));\n        dispatch(setCurrentPage(page));\n        dispatch(setLoader(false));\n    } catch (error) {\n        dispatch(setGlobalErrorThunk(error));\n    }\n}\n\nexport const follow = id => dispatch => {\n    followThunk(followAPI.postFollow, id, dispatch, followCreator, setDisabled, setGlobalErrorThunk);\n}\n\nexport const unfollow = id => dispatch => {\n    followThunk(followAPI.deleteFollow, id, dispatch, unfollowCreator, setDisabled, setGlobalErrorThunk);\n}\n\nexport const getOnlineStatusThunk = () => async dispatch => {\n    const response = await onlineAPI.getOnline();\n    const data = Object.keys(response.data).map(e => ({ code: response.data[e], id: e }));\n    dispatch(getOnlineStatusCreator(data));\n}\n\nexport const setOnlineStatusThunk = id => async dispatch => {\n    await onlineAPI.setOnline(id);\n    dispatch(getOnlineStatusThunk());\n}\n\nexport const setOfflineStatusThunk = id => async dispatch => {\n    await onlineAPI.setOffline(id);\n    dispatch(getOnlineStatusThunk());\n}\n\nexport default usersReducer;","export const getAuthData = state => {\n    return state.auth.data;\n}\n\nexport const getAuthCaptcha = state => {\n    return state.auth.captcha;\n}","const SET_COLOR = 'my-app/themeReducer/SET-COLOR';\n\nconst initialState = {\n    color: localStorage.getItem('theme') ? localStorage.getItem('theme') : '#3959ab'\n}\n\nconst themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_COLOR: return { ...state, color: action.color };\n        default: return state;\n    }\n}\n\nexport const setThemeColorCreator = color => ({ type: SET_COLOR, color });\n\nexport default themeReducer;","export const requireField = value => {\n    if (!value) return 'Field is require!';\n}\n\nexport const maxLength = maxLength => value => {\n    if (value.length > maxLength) return `Max legnth is ${maxLength} symbols!`;\n}","export const WithSetOffline = (isOnline, dispatch, data, setOfflineStatusThunk) => {\n    isOnline.find(e => {\n        if (e.code === data.id) {\n            dispatch(setOfflineStatusThunk(e.id));\n        }\n    });\n}","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getAuthThunk, logoutMeThunk, setActualDeauthCreator } from '../../redux/reducers/authReducer/authReducer';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\nimport { getAuthData } from './authSelectors';\nimport { getThemeColor } from '../theme/themeSelectors';\nimport { WithSetOffline } from '../hoc/WithSetOffline';\nimport { getUsersIsOnline } from '../users/usersSelectors';\nimport { setOfflineStatusThunk } from '../../redux/reducers/usersReducer/usersReducer';\n\nconst Auth = () => {\n    const dispatch = useDispatch();\n    const [active, setActive] = useState(false);\n    const data = useSelector(state => getAuthData(state));\n    const color = useSelector(state => getThemeColor(state));\n    const isOnline = useSelector(state => getUsersIsOnline(state));\n\n    const loadData = useCallback(() => dispatch(getAuthThunk()), [getAuthThunk]);\n    \n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    const closeForm = () => {\n        if (active) {\n            setActive(false);\n        }\n    }\n\n    const logoutForm = () => {\n        setActive(false);\n        dispatch(logoutMeThunk());\n        localStorage.setItem('theme', '#3959ab');\n        dispatch(setThemeColorCreator('#3959ab'));\n        dispatch(setActualDeauthCreator(true));\n        WithSetOffline(isOnline, dispatch, data, setOfflineStatusThunk);\n    }\n    return (\n        <Fragment>{\n            data.isAuth\n            ? <div>\n                <Link\n                    onMouseOver={() => setActive(true)}\n                    onClick={closeForm}\n                    className='auth-user' to='/profile'>\n                        {data.login}\n                    </Link>\n                {active && (\n                    <span\n                        onMouseOut={() => setActive(false)}\n                        className='logout'\n                        onClick={logoutForm}\n                        style={{ backgroundColor: color }}>\n                        Log Out\n                    </span>\n                )}\n            </div>\n            : <NavLink className='auth-login' activeClassName='auth-login-active' to='/login'>LOGIN</NavLink>\n        }</Fragment>\n    )\n}\n\nexport default Auth;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport { setThemeColorCreator } from '../../redux/reducers/themeReducer/themeReducer';\n\nconst Button = ({ children }) => {\n    const dispatch = useDispatch();\n\n    const changeTheme = e => {\n        localStorage.setItem('theme', '#3959ab');\n\n        if (e.target.innerHTML === 'Blue') {\n            return dispatch(setThemeColorCreator(localStorage.getItem('theme')));\n        } else {\n            localStorage.setItem('theme', e.target.innerText);\n            return dispatch(setThemeColorCreator(e.target.innerText));\n        }\n    }\n    return <div onClick={changeTheme} className='theme-button'>{children}</div>\n}\n\nconst Theme = () => {\n    const color = useSelector(state => state.theme.color);\n\n    return (\n        <div style={{ backgroundColor: color }} className='theme-colors'>\n            <Button>Blue</Button>\n            <Button>Green</Button>\n            <Button>Orange</Button>\n            <Button>Red</Button>\n        </div>\n    )\n}\n\nexport default Theme;","import React, { useState, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport '../../App';\nimport Auth from '../auth/Auth';\nimport Theme from '../theme/Theme';\nimport { getThemeColor } from '../theme/themeSelectors';\nimport { getAuthData } from '../auth/authSelectors';\n\nconst Header = () => {\n    const color = useSelector(state => getThemeColor(state));\n    const data = useSelector(state => getAuthData(state));\n    const [active, setActive] = useState(false);\n\n    const setNavBar = (url, link) => {\n        return (\n            <div>\n                <NavLink className='route' to={url}>\n                    {link}\n                </NavLink>\n            </div>\n        )\n    }\n\n    const selectActive = () => {\n        if (active) {\n            return setActive(false);\n        } else {\n            return setActive(true);\n        }\n    }\n\n    const url = 'https://s3.amazonaws.com/www-inside-design/uploads/2019/08/color_wheel-810x810.png';\n    return (\n        <Fragment>\n            <div className='header-wrapper'>\n                <div className='header' style={{ backgroundColor: color }}>\n                    <div className='title'>\n                        <span>Haries Network</span>\n                        <span className='beta-title'>beta</span>\n                    </div>\n                    <span className='border-title'>|</span>\n                    {data.isAuth && (\n                        <div>\n                            <img\n                                className='color-img'\n                                onClick={selectActive}\n                                src={url}\n                                width={30}\n                                alt=''\n                            />\n                            {active && <Theme />}\n                        </div>\n                    )}\n                    {setNavBar('/updates', 'UPDATES')}\n                    {setNavBar('/profile', 'PROFILE')}\n                    {setNavBar('/users', 'USERS')}\n                    <Auth />\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Header;","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport usersReducer from '../reducers/usersReducer/usersReducer';\nimport profileReducer from '../reducers/profileReducer/profileReducer';\nimport authReducer from '../reducers/authReducer/authReducer';\nimport appReducer from '../reducers/appReducer/appReducer';\nimport themeReducer from '../reducers/themeReducer/themeReducer';\n\nconst reducers = combineReducers({\n    form: formReducer,\n    usersPage: usersReducer,\n    profilePage: profileReducer,\n    auth: authReducer,\n    app: appReducer,\n    theme: themeReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { Field } from 'redux-form';\nimport '../../App.css';\n\nconst FormsControl = ({ meta: { touched, error }, children }) => {\n    const hasError = touched && error;\n    return (\n        <>\n            {children}\n            {hasError && <div className='warning_field'>\n                <b>{error.toString()}</b>\n            </div>}\n        </>\n    )\n}\n\nexport const Input = props => (\n    <FormsControl { ...props }><input { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const Textarea = props => (\n    <FormsControl { ...props }><textarea { ...props.input } { ...props } /></FormsControl>\n)\n\nexport const createFiled = (component, name, validate, type, className, placeholder) => (\n    <Field\n        className={className}\n        component={component}\n        name={name}\n        validate={validate}\n        type={type}\n        placeholder={placeholder}\n    />\n)","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createFiled, Input, Textarea } from '../../redux/reduxForm/formsControl';\nimport '../../App.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile: { contacts }, error }) => (\n    <form onSubmit={handleSubmit}>\n        {error && <h2>{error}</h2>}\n        <div className='profile-form'>\n            <div><b>ABOUT ME:</b> <div className='edit-button'>\n                <button className='button'>SAVE</button>\n            </div> <div>{createFiled(Textarea, 'aboutMe', [])}</div></div>\n            <div><b>SEARCH JOB:</b> {createFiled(Input, 'lookingForAJob', [], 'checkbox')}</div>\n            <div><b>MY SKILLS:</b> <div>{createFiled(Textarea, 'lookingForAJobDescription', [])}</div></div>\n        </div>\n        <div>\n            <hr color='white' />\n            <b>SOCIAL NETWORKS</b>\n            <hr color='white' />\n        </div>\n        <div>{\n            Object.keys(contacts).map(e => (\n                <div className='profile-field' key={e}>\n                    <b className='profile-networks'>{e}:</b> \n                    <span>\n                        {createFiled(Input, `contacts.${e}`, [])}\n                    </span>\n                </div>\n            ))\n        }</div>\n    </form>\n);\n\nexport default reduxForm({ form: 'profilepage' })(ProfileDataForm);","import React, { Fragment, useState, useEffect } from 'react';\n\nconst ProfileStatus = ({ status, isOwner, putStatusThunk }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [value, setValue] = useState(status);\n\n    useEffect(() => {\n        setValue(status);\n    }, [status]);\n\n    const activateEditMode = () => {\n        if (isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        putStatusThunk(value);\n    }\n\n    const changeStatus = e => {\n        setValue(e.target.value);\n    }\n    return (\n        <Fragment>{\n            editMode\n            ? <input onChange={changeStatus} onBlur={deactivateEditMode} value={value} maxLength={19} autoFocus={true} />\n            : <span onClick={activateEditMode}>{value || '----'}</span>\n        }</Fragment>\n    )\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { getThemeColor } from '../theme/themeSelectors';\n\nconst Wrapper = ({ children }) => {\n    const color = useSelector(state => getThemeColor(state));\n\n    return (\n        <div className='wrapper-profile'>\n            <div style={{ backgroundColor: color }} className='profile-page'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Wrapper;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../../App.css';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileStatus from './ProfileStatus';\nimport Wrapper from '../hoc/Wrapper';\nimport { getUsersThunk } from '../../redux/reducers/usersReducer/usersReducer';\nimport { Link } from 'react-router-dom';\nimport { getUsersData, getUsersIsOnline } from '../users/usersSelectors';\nimport { ShowOnlineStatus } from '../hoc/ShowOnlineStatus';\n\nconst Profile = ({ data, removeAdminThunk, addAdminThunk, profile, isTechAdmin, isAdmin, isOwner, putImageThunk, putProfileThunk, status, ...props }) => {\n    const dispatch = useDispatch();\n    \n    const [editMode, setEditMode] = useState(false);\n    const users = useSelector(state => getUsersData(state));\n\n    const loadUsers = useCallback(() => dispatch(getUsersThunk()), [getUsersThunk]);\n\n    useEffect(() => {\n        loadUsers();\n    }, []);\n\n    if (!profile) {\n        return <div className='users-loader'>Loading...</div>\n    }\n\n    const changeImage = e => {\n        if (e.target.files.length) {\n            putImageThunk(e.target.files[0]);\n        }\n    }\n\n    const saveProfile = e => {\n        putProfileThunk(e)\n        .then(() => setEditMode(false));\n    }\n\n    const addAdmin = () => {\n        addAdminThunk(profile.userId);\n    }\n\n    const removeAdmin = () => {\n        isAdmin.map(e => {\n            if (e.code === profile.userId) {\n                removeAdminThunk(e.id);\n            }\n        })\n    }\n    \n    const userImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/User_icon_2.svg/220px-User_icon_2.svg.png';\n    return (\n        <Fragment>\n            <Wrapper>\n                <div className='profile-flex'>\n                    <div className='profile-oneblock'>\n                        {!isTechAdmin.some(id => id.code === profile.userId)\n                        ? !isAdmin.some(id => id.code === profile.userId)\n                        ? <div className='profile-info'>{profile.fullName} | {profile.userId}</div>\n                        : <div className='profile-admin-info '>{profile.fullName} | {profile.userId} (admin)</div>\n                        : <div className='profile-techadmin-info'>{profile.fullName} | {profile.userId} (developer)</div>}\n                        <ShowOnlineStatus data={profile.userId} />\n                        <div><img className={profile.photos.large && 'profile-img'} src={profile.photos.large || userImage} alt='' /></div>\n                        {!isOwner && isTechAdmin.some(id => id.code === data.id) && (\n                            <>{\n                                isTechAdmin.find(id => id.code === profile.userId) ? null :\n                                !isAdmin.some(id => id.code === profile.userId)\n                                ? <button onClick={addAdmin} className='button'>назначить админом</button>\n                                : <button onClick={removeAdmin} className='button'>снять админа</button>\n                            }</>\n                        )}\n                        {isOwner && <input type='file' onChange={changeImage} />}\n                        <div className='profile-status'>STATUS: <ProfileStatus status={status} isOwner={isOwner} { ...props } /></div>\n                    </div>\n                    <div className='profile-twoblock'>\n                        {!editMode\n                            ? <ProfileData onClick={() => setEditMode(true)} isOwner={isOwner} profile={profile} />\n                            : <ProfileDataForm onSubmit={saveProfile} initialValues={profile} profile={profile} />}\n                    </div>\n                    {isOwner && <div className='followers-wrapper'>\n                        <span className='follow-title'>друзья</span>\n                        <div className='followers-block'>\n                            {users.filter(e => e.followed === true).map(({ id, name, photos }) => (\n                                <div key={id}>\n                                    <Link className='image-wrapper' to={`/profile/${id}`}>\n                                        <img className='image-user' src={photos.large || userImage} alt='' />\n                                    </Link>\n                                    <div className='follower-name'>{name}</div>\n                                </div>\n                            ))}\n                            <div className='followers-info'>найти друзей можно во вкладке users</div>\n                        </div>\n                    </div>}\n                </div>\n            </Wrapper>\n        </Fragment>\n    )\n}\n\nconst ProfileData = ({ isOwner, onClick, profile: { contacts, aboutMe, lookingForAJob, lookingForAJobDescription } }) => {\n    return (\n        <Fragment>\n            {isOwner && <div className='edit-button'>\n                <button className='button' onClick={onClick}>EDIT</button>\n            </div>}\n            <div><b>ABOUT ME:</b> {aboutMe && aboutMe.toString()}</div>\n            <div><b>SEARCH JOB:</b> {lookingForAJob ? 'YES' : 'NO'}</div>\n            <div><b>MY SKILLS:</b> {lookingForAJobDescription && lookingForAJobDescription.toString()}</div>\n            <div>\n                <hr color='white' />\n                <b>SOCIAL NETWORKS</b>\n                <hr color='white' />\n            </div>\n            <div>{\n                Object.keys(contacts).map(e => (\n                    <div key={e}>{contacts[e] && <><b className='profile-networks'>{e}:</b> {contacts[e]}</>}</div>\n                ))\n            }</div>\n        </Fragment>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfileThunk, putImageThunk, putProfileThunk, getStatusThunk, putStatusThunk, addAdminThunk, removeAdminThunk } from '../../redux/reducers/profileReducer/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getProfileData, getProfileStatus, getProfileIsAdmin, getProfileIsTechAdmin } from './profileSelectors';\nimport { getAuthData } from '../auth/authSelectors';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let id = this.props.match.params.userId;\n        if (!id) {\n            id = this.props.data.id;\n            if (!id) {\n                this.props.history.push('/login');\n            }\n        }\n        if (this.props.data.isAuth || this.props.match.params.userId) {\n            this.props.getProfileThunk(id);\n            this.props.getStatusThunk(id);\n        }\n    }\n    \n    componentDidUpdate(prop) {\n        if (prop.match.params.userId !== this.props.match.params.userId ||\n            prop.data.isAuth !== this.props.data.isAuth) {\n            this.componentDidMount();\n        }\n    }\n\n    render() {\n        return <Profile isOwner={!this.props.match.params.userId} { ...this.props } />\n    }\n}\n\nconst mapStateToProps = state => ({\n    profile: getProfileData(state),\n    status: getProfileStatus(state),\n    isAdmin: getProfileIsAdmin(state),\n    isTechAdmin: getProfileIsTechAdmin(state),\n    data: getAuthData(state)\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n    getProfileThunk,\n    putImageThunk,\n    putProfileThunk,\n    getStatusThunk,\n    putStatusThunk,\n    addAdminThunk,\n    removeAdminThunk\n}))(ProfileContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport '../../App.css';\nimport cn from 'classnames';\nimport { createFiled, Input } from '../../redux/reduxForm/formsControl';\nimport { requireField, maxLength } from '../../redux/reduxForm/validators';\nimport { postAuthThunk } from '../../redux/reducers/authReducer/authReducer';\nimport { getAuthData, getAuthCaptcha } from '../auth/authSelectors';\n\nconst maxSymbols = maxLength(32);\n\nconst Wrapper = ({ title, children, bclass }) => {\n    const content = <b className={bclass}>{title}</b>\n    return (\n        <div>\n            <label>\n                {!bclass && content}\n                <div className='input-block'>\n                    {bclass && content}\n                    {children}\n                </div>\n            </label>\n        </div>\n    )\n}\n\nconst LoginFields = ({ handleSubmit, error, captcha }) => {\n    const color = useSelector(state => state.theme.color);\n    return (\n        <div className='login-wrapper'>\n            <form onSubmit={handleSubmit} style={{ backgroundColor: color }} className={cn('profile-page', 'auth-page')}>\n                <div className='auth-card'>\n                    <h2>LOGIN</h2>\n                    <Wrapper title='EMAIL'>\n                        {createFiled(Input, 'email', [requireField, maxSymbols], 'text', 'input', 'Enter email')}\n                    </Wrapper>\n                    <Wrapper title='PASSWORD'>\n                        {createFiled(Input, 'password', [requireField, maxSymbols], 'password', 'input', 'Enter password')}\n                    </Wrapper>\n                    <Wrapper title='Remember me' bclass='remember'>\n                        {createFiled(Input, 'checkbox', [requireField], 'checkbox')}\n                    </Wrapper>\n                    {error && <div className='error_message'>{error}</div>}\n                    {captcha && <div className='captcha-wrapper'>\n                        <div><img src={captcha} alt='' /></div>\n                        {createFiled(Input, 'captcha', [requireField])}\n                    </div>}\n                    <button className='form-button'>Login</button>\n                    <a href='https://social-network.samuraijs.com/signUp' target='_blank' className='form-button'>\n                        Create account?\n                    </a>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'authpage' })(LoginFields);\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const auth = useSelector(state => getAuthData(state));\n    const captcha = useSelector(state => getAuthCaptcha(state));\n\n    function data(e) {\n        dispatch(postAuthThunk(e.email, e.password, e.checkbox, e.captcha));\n    }\n    \n    if (auth.isAuth) {\n        return <Redirect to='/profile' />\n    }\n    return <LoginReduxForm onSubmit={data} captcha={captcha} />\n}\n\nexport default Login;","import React, { Fragment } from 'react';\nimport '../../App.css';\nimport Wrapper from '../hoc/Wrapper';\n\nconst Updates = () => {\n    let upd = <span className='new-update'>new</span>\n    return (\n        <Fragment>\n            <div className='wrapper-updates'>\n                <Wrapper>\n                    <div className='updates-block'>\n                        <div className='updates-title'>Update 2.2</div>\n                        <div className='updates-info'>Во втором обновлении доработаны и исправлены некоторые элементы, а именно:</div>\n                        <ul>\n                            <li>При авторизации/выходе появляется надпись соответствующая надпись;</li>\n                            <li>Возможность задавать второстепенный цвет сайта;</li>\n                            <li>Переключатель между страницами теперь адаптивный;</li>\n                            <li>Список пользователей, на которых вы подписаны теперь отображается в вашем профиле;</li>\n                            <li>Добавлена админ-панель;</li>\n                            <li>Теперь у пользователей отображается статус онлайн или офлайн; {upd}</li>\n                        </ul>\n                        <div className='updates-end'>\n                            <div>Ну а на этом пока все, спасибо за то, что Вы остаетесь с нами!</div>\n                            <div>С уважаением, команада Haries Network!</div>\n                        </div>\n                    </div>\n                </Wrapper>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Updates;","import React from 'react';\nimport '../../App.css';\n\nconst AuthMsg = ({ children }) => (\n    <div className='authorized-message'>\n        {children}\n    </div>\n)\n\nexport default AuthMsg;","import React, { useEffect, Fragment, useCallback } from 'react';\nimport { HashRouter, Switch, Redirect, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/header/Header';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './redux/store/store';\nimport ProfileContainer from './components/profile/ProfileContainer';\nimport Login from './components/login/Login';\nimport { setInitializingThunk } from './redux/reducers/appReducer/appReducer';\nimport { WithSuspense } from './components/hoc/withSuspense';\nimport Updates from \"./components/updates/Updates\";\nimport { setActualAuthCreator, setActualDeauthCreator } from './redux/reducers/authReducer/authReducer';\nimport AuthMsg from './components/hoc/AuthMsg';\nimport { getAdminThunk, getTechAdminThunk } from './redux/reducers/profileReducer/profileReducer';\nimport { getOnlineStatusThunk, setOnlineStatusThunk, setOfflineStatusThunk } from './redux/reducers/usersReducer/usersReducer';\nimport { getUsersIsOnline } from './components/users/usersSelectors';\nimport { WithSetOffline } from './components/hoc/WithSetOffline';\nimport { WithSetOnline } from './components/hoc/WithSetOnline';\nimport { getAuthData } from './components/auth/authSelectors';\n\nconst Users = React.lazy(() => import('./components/users/Users'));\n\nconst Project = () => {\n    const dispatch = useDispatch();\n    const initializing = useSelector(state => state.app.initializing);\n    const globalError = useSelector(state => state.app.globalError);\n    const count = useSelector(state => state.app.count);\n    const data = useSelector(state => getAuthData(state));\n    const isActualAuth = useSelector(state => state.auth.isActualAuth);\n    const isActualDeauth = useSelector(state => state.auth.isActualDeauth);\n    const isOnline = useSelector(state => getUsersIsOnline(state));\n    \n    useEffect(() => {\n        dispatch(setInitializingThunk());\n        dispatch(getAdminThunk());\n        dispatch(getTechAdminThunk());\n        dispatch(getOnlineStatusThunk());\n        WithSetOnline(isOnline, dispatch, data, setOnlineStatusThunk);\n        window.onunload = () => WithSetOffline(isOnline, dispatch, data, setOfflineStatusThunk);\n    }, [data.id, isOnline.length, setOfflineStatusThunk]);\n\n    let content = isActualAuth && <AuthMsg>Вы успешно вошли!</AuthMsg>\n    \n    if (isActualDeauth) {\n        content = <AuthMsg>Вы успешно вышли!</AuthMsg>\n    }\n\n    if (isActualAuth || isActualDeauth) {\n        setTimeout(() => {\n            dispatch(setActualAuthCreator(false));\n            dispatch(setActualDeauthCreator(false));\n        }, 5000);\n    }\n\n    return (\n        <Fragment>\n            <div className='app-theme'>\n                <Header />\n                {globalError && (\n                    <div className='global-block'>\n                        <span className='global-error'>{globalError.toString()} ({count})</span>\n                    </div>\n                )}\n                {content}\n                {initializing\n                ? <Switch>\n                    <Redirect exact from='/' to='/profile' />\n                    <Redirect exact from={`/profile/${data.id}`} to='/profile' />\n                    <Route path='/login' component={Login} />\n                    <Route path='/updates' component={Updates} />\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                    <Route path='/users' render={WithSuspense(Users)} />\n                    <Route path='*' render={() => <div className='users-loader'>404: Not Found</div>} />\n                </Switch>\n                : <div className='users-loader'>INITIALIZING...</div>}\n            </div>\n        </Fragment>\n    )\n}\n\nconst App = () => (\n    <HashRouter>\n        <Provider store={store}>\n            <Project />\n        </Provider>\n    </HashRouter>\n)\n\nexport default App;","export const WithSetOnline = (isOnline, dispatch, data, setOnlineStatusThunk) => {\n    if (isOnline.length) {\n        !isOnline.find(({ code }) => code === data.id)\n        && dispatch(setOnlineStatusThunk(data.id));\n    }\n}","import React from 'react';\nimport '../../App.css';\n\nexport const WithSuspense = Component => () => (\n    <React.Suspense fallback={<div className='users-loader'>SUSPENSE LOADING...</div>}>\n        <Component />\n    </React.Suspense>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createSelector } from 'reselect';\n\nconst getUsersSelector = state => {\n    return state.usersPage.users;\n}\n\nexport const getUsersData = createSelector(getUsersSelector, users => {\n    return users.filter(() => true);\n});\n\nexport const getUsersIsDisabled = state => {\n    return state.usersPage.isDisabled;\n}\n\nexport const getUsersIsLoad = state => {\n    return state.usersPage.isLoad;\n}\n\nexport const getUsersTotalCount = state => {\n    return state.usersPage.totalCount;\n}\n\nexport const getUsersCurrentPage = state => {\n    return state.usersPage.currentPage;\n}\n\nexport const getUsersIsOnline = state => {\n    return state.usersPage.isOnline;\n}","import { getAuthThunk } from \"../authReducer/authReducer\";\n\nconst SET_INITIALIZING = 'my-app/appReducer/SET-INITIALIZING';\nconst SET_GLOBAL_ERROR = 'my-app/appReducer/SET-GLOBAL-ERROR';\nconst SET_COUNT = 'my-app/appReducer/SET-COUNT';\n\nconst initialState = {\n    initializing: false,\n    count: 5,\n    globalError: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZING: return { ...state, initializing: true };\n        case SET_COUNT: return { ...state, count: action.count };\n        case SET_GLOBAL_ERROR: return { ...state, globalError: action.err };\n        default: return state;\n    }\n}\n\nconst setInitializing = () => ({ type: SET_INITIALIZING });\nconst setGlobalErorr = err => ({ type: SET_GLOBAL_ERROR, err });\nconst setCount = count => ({ type: SET_COUNT, count });\n\nexport const setInitializingThunk = () => async dispatch => {\n    await dispatch(getAuthThunk());\n    dispatch(setInitializing());\n}\n\nexport const setGlobalErrorThunk = error => (dispatch, getState) => {\n    dispatch(setGlobalErorr(error));\n    let count = getState().app.count;\n    const int = setInterval(() => {\n        dispatch(setCount(count -= 1));\n        if (count === 0) {\n            dispatch(setGlobalErorr(null));\n            dispatch(setCount(5));\n            clearInterval(int);\n        }\n    }, 1000);\n}\n\nexport default appReducer;","export const getThemeColor = state => {\n    return state.theme.color;\n}","export const getProfileData = state => {\n    return state.profilePage.profile;\n}\n\nexport const getProfileStatus = state => {\n    return state.profilePage.status;\n}\n\nexport const getProfileIsAdmin = state => {\n    return state.profilePage.isAdmin;\n}\n\nexport const getProfileIsTechAdmin = state => {\n    return state.profilePage.isTechAdmin;\n}"],"sourceRoot":""}